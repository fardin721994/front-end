[{"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\index.js":"1","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\App.js":"2","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\pages\\MainPage.js":"3","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\bootstrap\\OldNavBar.js":"4","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\tour\\Tour.js":"5","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\navigation\\NavBar.js":"6","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\user\\pages\\Users.js":"7","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\places\\pages\\NewPlace.js":"8","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\RBAutoCompleteSearch.js":"9","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\RegistrationForm.js":"10","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\LoginForm.js":"11","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Ttest.js":"12","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\hooks\\http-hook.js":"13","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\AutoCompleteSearch.js":"14","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\pages\\SignUp.js":"15","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\Input.js":"16","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\LoadingSpinner.js":"17","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\TextError.js":"18","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\ErrorModal.js":"19","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Card.js":"20","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\hooks\\form-hook.js":"21","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\heading\\Header.js":"22","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\user\\components\\UsersList.js":"23","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\footer\\Footer.js":"24","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\features\\Features.js":"25","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\FormElements\\Button.js":"26","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\context\\auth-context.js":"27","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\FormElements\\Input.js":"28","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\util\\validators.js":"29","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Modal.js":"30","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\user\\components\\UserItem.js":"31","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\heading\\header-title\\HeaderTitle.js":"32","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Backdrop.js":"33","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Avatar.js":"34","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\UserCourses.js":"35","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\NewCourse.js":"36","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordInput.js":"37","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordImageInput.js":"38","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\ImageInput.js":"39","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\UpdateCourse.js":"40","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CourseSection.js":"41","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\CourseItem.js":"42","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\Progress.js":"43","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\SubtitleUploadPart.js":"44","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordsPart.js":"45","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordItem.js":"46","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\VideoUploadPart.js":"47","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\VideoPlayer.js":"48","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\FileUpload.js":"49","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\Message.js":"50","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CourseNavbar.js":"51","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CourseProfile.js":"52","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CoursePublish.js":"53","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\Test.js":"54","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\word-creation\\AudioStoring.js":"55","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\word-creation\\ImageStoring.js":"56","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\RBtest.js":"57","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordAutoCompleteSearch.js":"58","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordSearchInput.js":"59","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\WordReview.js":"60","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\Carousel.js":"61","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\WordCreation.js":"62","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\Meanings.js":"63","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\Meaning.js":"64","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\Examples.js":"65","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\SectionView.js":"66","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\LoadingSpinner.js":"67","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\Courses.js":"68","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\CourseView.js":"69","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\SectionItem.js":"70"},{"size":179,"mtime":1648532578000,"results":"71","hashOfConfig":"72"},{"size":183813,"mtime":1695994793100,"results":"73","hashOfConfig":"72"},{"size":407,"mtime":1671597792761,"results":"74","hashOfConfig":"72"},{"size":5695,"mtime":1679326787548,"results":"75","hashOfConfig":"72"},{"size":2706,"mtime":1682272405605,"results":"76","hashOfConfig":"72"},{"size":4001,"mtime":1684092376832,"results":"77","hashOfConfig":"72"},{"size":1083,"mtime":1677616167815,"results":"78","hashOfConfig":"72"},{"size":2745,"mtime":1677616760920,"results":"79","hashOfConfig":"72"},{"size":3168,"mtime":1689737474333,"results":"80","hashOfConfig":"72"},{"size":4874,"mtime":1681940103416,"results":"81","hashOfConfig":"72"},{"size":3514,"mtime":1681940055749,"results":"82","hashOfConfig":"72"},{"size":1611,"mtime":1676968116564,"results":"83","hashOfConfig":"72"},{"size":1398,"mtime":1573561990000,"results":"84","hashOfConfig":"72"},{"size":6639,"mtime":1676861553418,"results":"85","hashOfConfig":"72"},{"size":621,"mtime":1680046495013,"results":"86","hashOfConfig":"72"},{"size":1324,"mtime":1681824874599,"results":"87","hashOfConfig":"72"},{"size":243,"mtime":1672734488431,"results":"88","hashOfConfig":"72"},{"size":140,"mtime":1672734637813,"results":"89","hashOfConfig":"72"},{"size":390,"mtime":1573544386000,"results":"90","hashOfConfig":"72"},{"size":197,"mtime":1672734476347,"results":"91","hashOfConfig":"72"},{"size":1448,"mtime":1574286141000,"results":"92","hashOfConfig":"72"},{"size":338,"mtime":1672813829440,"results":"93","hashOfConfig":"72"},{"size":631,"mtime":1672734402467,"results":"94","hashOfConfig":"72"},{"size":2165,"mtime":1672980663094,"results":"95","hashOfConfig":"72"},{"size":3275,"mtime":1680012094548,"results":"96","hashOfConfig":"72"},{"size":1023,"mtime":1672734426484,"results":"97","hashOfConfig":"72"},{"size":162,"mtime":1573660516000,"results":"98","hashOfConfig":"72"},{"size":1841,"mtime":1672734434870,"results":"99","hashOfConfig":"72"},{"size":1664,"mtime":1573493468000,"results":"100","hashOfConfig":"72"},{"size":1307,"mtime":1675085473216,"results":"101","hashOfConfig":"72"},{"size":757,"mtime":1672734397311,"results":"102","hashOfConfig":"72"},{"size":1901,"mtime":1680629050505,"results":"103","hashOfConfig":"72"},{"size":265,"mtime":1672734471502,"results":"104","hashOfConfig":"72"},{"size":310,"mtime":1672734467515,"results":"105","hashOfConfig":"72"},{"size":1484,"mtime":1695180173144,"results":"106","hashOfConfig":"72"},{"size":5159,"mtime":1694267918856,"results":"107","hashOfConfig":"72"},{"size":2235,"mtime":1677616639837,"results":"108","hashOfConfig":"72"},{"size":10747,"mtime":1678456725019,"results":"109","hashOfConfig":"72"},{"size":1678,"mtime":1672047282475,"results":"110","hashOfConfig":"72"},{"size":2829,"mtime":1677616357709,"results":"111","hashOfConfig":"72"},{"size":4245,"mtime":1694208588001,"results":"112","hashOfConfig":"72"},{"size":348,"mtime":1695283248977,"results":"113","hashOfConfig":"72"},{"size":429,"mtime":1677769692175,"results":"114","hashOfConfig":"72"},{"size":570,"mtime":1694208665679,"results":"115","hashOfConfig":"72"},{"size":2827,"mtime":1694185210070,"results":"116","hashOfConfig":"72"},{"size":1112,"mtime":1693858501644,"results":"117","hashOfConfig":"72"},{"size":420,"mtime":1683248120317,"results":"118","hashOfConfig":"72"},{"size":25356,"mtime":1695115023981,"results":"119","hashOfConfig":"72"},{"size":3224,"mtime":1694381954208,"results":"120","hashOfConfig":"72"},{"size":502,"mtime":1677769795564,"results":"121","hashOfConfig":"72"},{"size":1985,"mtime":1693676560725,"results":"122","hashOfConfig":"72"},{"size":2748,"mtime":1694196875621,"results":"123","hashOfConfig":"72"},{"size":528,"mtime":1694269099924,"results":"124","hashOfConfig":"72"},{"size":742,"mtime":1682912063342,"results":"125","hashOfConfig":"72"},{"size":123,"mtime":1684088227876,"results":"126","hashOfConfig":"72"},{"size":123,"mtime":1684088221192,"results":"127","hashOfConfig":"72"},{"size":3178,"mtime":1689743328712,"results":"128","hashOfConfig":"72"},{"size":3216,"mtime":1693942626510,"results":"129","hashOfConfig":"72"},{"size":1746,"mtime":1693942954100,"results":"130","hashOfConfig":"72"},{"size":2931,"mtime":1690525071250,"results":"131","hashOfConfig":"72"},{"size":1877,"mtime":1690704152683,"results":"132","hashOfConfig":"72"},{"size":2027,"mtime":1691167715328,"results":"133","hashOfConfig":"72"},{"size":1012,"mtime":1691169230528,"results":"134","hashOfConfig":"72"},{"size":1048,"mtime":1691148111619,"results":"135","hashOfConfig":"72"},{"size":1040,"mtime":1691169068212,"results":"136","hashOfConfig":"72"},{"size":3689,"mtime":1695284753413,"results":"137","hashOfConfig":"72"},{"size":211,"mtime":1695031954213,"results":"138","hashOfConfig":"72"},{"size":1631,"mtime":1695275439415,"results":"139","hashOfConfig":"72"},{"size":1994,"mtime":1695306411465,"results":"140","hashOfConfig":"72"},{"size":448,"mtime":1695284490638,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"ua7h62",{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"144"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"144"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"144"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"144"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"200","usedDeprecatedRules":"144"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"144"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"144"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"174"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"174"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"144"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"144"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"144"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"144"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"144"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"144"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"144"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"144"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"144"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"144"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"144"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"144"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"144"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"144"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"144"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"144"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"144"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"144"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"144"},"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\index.js",[],["316","317"],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\App.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\pages\\MainPage.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\bootstrap\\OldNavBar.js",["351","352","353","354","355","356"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport pic from \"./logo.png\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction OldNavBar(props) {\r\n  const logInstatus = props.logInstatus;\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        !logInstatus ? (\r\n          <nav\r\n            className=\"navbar navbar-expand-lg fs-5 fw-semibold \"\r\n            style={{ backgroundColor: \"#282729\" }}\r\n          >\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"#\">\r\n                <img src={pic} alt=\"Bootstrap\" width=\"80\" />\r\n              </a>\r\n              <button\r\n                className=\"navbar-toggler bg-warning\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarSupportedContent\"\r\n                aria-controls=\"navbarSupportedContent\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse \"\r\n                id=\"navbarSupportedContent\"\r\n                style={{ justifyContent: \"space-between\" }}\r\n              >\r\n                {/* /////// links at the left side of the navbar */}\r\n                <ul className=\"navbar-nav  mb-2 mb-lg-0  \">\r\n                  <li className=\"nav-item nav__item \">\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"nav-link active  \"\r\n                      aria-current=\"page\"\r\n                    >\r\n                      Home\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link to=\"/login\" className=\"nav-link\">\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link to=\"registration\" className=\"nav-link \">\r\n                      Open account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link to=\"/courses/all\" className=\"nav-link \">\r\n                      Courses\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n                {/* /////// links at the RIGHT side of the navbar */}\r\n\r\n                <ul className=\"navbar-nav  mb-2 mb-lg-0  \">\r\n                  <li className=\"nav-item nav__item \">\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"nav-link active  \"\r\n                      aria-current=\"page\"\r\n                    >\r\n                      Home\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link to=\"/login\" className=\"nav-link\">\r\n                      Login\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link to=\"/registration\" className=\"nav-link \">\r\n                      Open account\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        ) : (\r\n          // if is logged in : start\r\n          <nav className=\"navbar navbar-expand-lg bg-body-tertiary fs-5 fw-semibold \">\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"#\">\r\n                <img src={pic} alt=\"Bootstrap\" width=\"80\" />\r\n              </a>\r\n              <button\r\n                className=\"navbar-toggler bg-warning\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarSupportedContent\"\r\n                aria-controls=\"navbarSupportedContent\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse\"\r\n                id=\"navbarSupportedContent\"\r\n              >\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"nav-link active me-auto\"\r\n                      aria-current=\"page\"\r\n                    >\r\n                      Home\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link to=\"/courses/new\" className=\"nav-link\">\r\n                      Creat a course!\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <Link\r\n                      to={`/courses/user/${props.userId}`}\r\n                      className=\"nav-link\"\r\n                    >\r\n                      My Courses\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item nav__item\">\r\n                    <button\r\n                      className=\"nav-link\"\r\n                      onClick={props.logOutStatusHandler}\r\n                    >\r\n                      Log out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        )\r\n        // if is logged in : finish\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default OldNavBar;\r\n",["357","358"],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\tour\\Tour.js",["359","360","361"],"import React, { useState } from \"react\";\r\n// import episode1 from \"./media/Friends.S01E01.720p_IFR.mp4\";\r\n\r\n// import gotta from \"./media/gotta.png\";\r\n// import cafeteria from \"./media/cafeteria.png\";\r\n// import chalk from \"./media/chalk.png\";\r\n// import date_1 from \"./media/date_1.png\";\r\n// import date_4 from \"./media/date_4.png\";\r\n// import go_through_1 from \"./media/go_through_1.png\";\r\n// import hairpiece from \"./media/hairpiece.png\";\r\n// import hump_noun_4 from \"./media/hump_noun_4.png\";\r\n// import turn_out_1 from \"./media/turn_out_1.png\";\r\n// import weird from \"./media/weird.png\";\r\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\r\nimport VideoPlayer from \"../../../courses/components/VideoPlayer\";\r\n\r\nfunction Tour() {\r\n  const data = {\r\n    gotta: \"gotta.png\",\r\n    weird: \"weird.png\",\r\n    turn: \"turn_out_1.png\",\r\n    hump: \"hump_noun_4.png\",\r\n    hair: \"hairpiece.png\",\r\n    cafeteria: \"cafeteria.png\",\r\n    chalk: \"chalk.png\",\r\n    turn: \"turn_out_1.png\",\r\n    go: \"go_through_1.png\",\r\n    date: \"date_1.png\",\r\n  };\r\n\r\n  // {'gotta' , 'weird',\r\n  // ,\r\n  // 'hump_noun_4',\r\n  // 'hairpiece'\r\n  // 1,\r\n  // gotta: gotta,\r\n  // date_1: date_1,\r\n  // date_4: date_4,\r\n  // cafeteria: cafeteria,\r\n  // chalk: chalk,\r\n  // };\r\n  // const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  // const [loadedVideo, setLoadedVideo] = useState();\r\n\r\n  // const srcNames = {\r\n  // weird: weird,\r\n  // turn_out_1: turn_out_1,\r\n  // hump_noun_4: hump_noun_4,\r\n  // hairpiece: hairpiece,\r\n  // go_through_1: go_through_1,\r\n  // gotta: gotta,\r\n  // date_1: date_1,\r\n  // date_4: date_4,\r\n  // cafeteria: cafeteria,\r\n  // chalk: chalk,\r\n  // };\r\n\r\n  // let videoData = [\r\n  //   { word: \"gotta\", time: 56, picSrc: gotta },\r\n  //   { word: \"cafeteria\", time: 82, picSrc: cafeteria },\r\n  //   { word: \"chalk\", time: 63, picSrc: chalk },\r\n  //   { word: \"date_1\", time: 71, picSrc: date_1 },\r\n  //   { word: \"date_4\", time: 71.1, picSrc: date_4 },\r\n  //   { word: \"go_through_1\", time: 66, picSrc: go_through_1 },\r\n  //   { word: \"hairpiece\", time: 60, picSrc: hairpiece },\r\n  //   { word: \"hump_noun_4\", time: 58, picSrc: hump_noun_4 },\r\n  //   { word: \"turn_out_1\", time: 104, picSrc: turn_out_1 },\r\n  //   { word: \"weird\", time: 108, picSrc: weird },\r\n  // ];\r\n\r\n  return (\r\n    <div>\r\n      <VideoPlayer\r\n        data={data}\r\n        // These two did not work. I couldn't solve the problem in passing media src using props.\r\n        // videoSrc={\"./media/Friends.S01E01.720p_IFR\"}\r\n        // subtitleSrc={\"./media/friends.s01e01_720p_bluray_x264-sujaidr.vtt\"}\r\n      />\r\n      {/* <img className=\"image\" ref={image}/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tour;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\navigation\\NavBar.js",["362","363"],"import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./logo.jpg\";\r\nimport { height } from \"@mui/system\";\r\nimport \"./NavBar.css\";\r\nfunction NavBar(props) {\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      className=\"my-nav\"\r\n    >\r\n      {!props.logInstatus ? (\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            <img\r\n              alt=\"\"\r\n              src={logo}\r\n              width=\"200\"\r\n              // height=\"160\"\r\n              className=\"d-inline-block align-center me-3\"\r\n            />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"w-100\">\r\n              <Nav.Link as={Link} to=\"/\" eventKey={1}>\r\n                Home\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/courses/all\" eventKey={2}>\r\n                Courses\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/courses/new\" eventKey={3}>\r\n                NewCourse\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/audios/new\" eventKey={4}>\r\n                Save Audio\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/images/new\" eventKey={5}>\r\n                Save Image\r\n              </Nav.Link>\r\n\r\n              <Nav.Link\r\n                as={Link}\r\n                to=\"/registration\"\r\n                eventKey={6}\r\n                className=\"ms-lg-auto\"\r\n              >\r\n                Sign up\r\n              </Nav.Link>\r\n              <Nav.Link eventKey={7} as={Link} to=\"/login\" className=\"me-3\">\r\n                Login\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      ) : (\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            <img\r\n              alt=\"\"\r\n              src={logo}\r\n              width=\"200\"\r\n              className=\"d-inline-block align-center me-3\"\r\n            />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"w-100\">\r\n              <Nav.Link as={Link} to=\"/\" eventKey={1}>\r\n                Home\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/courses/all\" eventKey={2}>\r\n                Courses\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/courses/all\" eventKey={3}>\r\n                MyCourses\r\n              </Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link\r\n                as={Link}\r\n                to=\"/registration\"\r\n                className=\"ms-lg-auto\"\r\n                eventKey={4}\r\n              >\r\n                Full Name\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                eventKey={5}\r\n                onClick={props.logOutStatusHandler}\r\n                className=\"me-3\"\r\n              >\r\n                Logout\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      )}\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\user\\pages\\Users.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\places\\pages\\NewPlace.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\RBAutoCompleteSearch.js",["364"],"import React, { useState, useRef } from \"react\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport Fuse from \"fuse.js\";\r\nimport { matchSorter } from \"match-sorter\";\r\n\r\n// import \"./AutoCompleteSearch.css\";\r\n\r\nfunction RBAutoCompleteSearch(props) {\r\n  const [value, setValue] = useState(props.initialValue);\r\n  const [rows, setRows] = useState([]);\r\n  const ref = useRef();\r\n\r\n  React.useEffect(() => {\r\n    (function () {\r\n      let activeElIndex = 0;\r\n      const children = ref.current.children;\r\n      ref.current.addEventListener(\"keydown\", (event) => {\r\n        // const activeElement = document.activeElement;\r\n        if (event.key === \"ArrowUp\") {\r\n          if (activeElIndex > 0) {\r\n            activeElIndex--;\r\n            if (activeElIndex > 0) {\r\n              children[1].children[activeElIndex - 1].focus();\r\n            } else children[0].focus();\r\n          }\r\n        }\r\n        if (event.key === \"ArrowDown\") {\r\n          activeElIndex++;\r\n\r\n          if (activeElIndex < children[1].children.length + 1)\r\n            children[1].children[activeElIndex - 1].focus();\r\n          else activeElIndex--;\r\n        }\r\n      });\r\n    })();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    (function () {\r\n      setValue(props.initialValue);\r\n    })();\r\n  }, [props.initialValue]);\r\n\r\n  React.useEffect(() => {\r\n    (function () {\r\n      if (props.closeSuggestionBox === true) setRows([]);\r\n    })();\r\n  }, [props.closeSuggestionBox]);\r\n\r\n  // const fuse = new Fuse(props.items, options);\r\n\r\n  // console.log(\"mwwwwwwwwwww\", props.items);\r\n  const onChange = (event) => {\r\n    props.setCloseSuggestionBox(false);\r\n    let newValue = event.target.value;\r\n    setValue(newValue);\r\n    let searchSuggestions;\r\n    if (newValue) {\r\n      searchSuggestions = matchSorter(props.items, newValue, {\r\n        keys: [\"title\"],\r\n      });\r\n    } else searchSuggestions = [];\r\n\r\n    const newRows = searchSuggestions.map((item) => (\r\n      <OverlayTrigger\r\n        //   key={placement}\r\n        placement=\"right\"\r\n        className=\"bg-primary border  \"\r\n        overlay={\r\n          <Tooltip>\r\n            {props.type\r\n              ? props.cues.filter((cue) => cue.id === item.cueId)[0].text\r\n              : item.definition}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <button\r\n          className=\" border rounded-0 auto-b\"\r\n          onClick={selectSuggetionHandler}\r\n        >\r\n          {item.title}\r\n        </button>\r\n      </OverlayTrigger>\r\n    ));\r\n    setRows(newRows);\r\n  };\r\n  const selectSuggetionHandler = (event) => {\r\n    props.handleWordChange(event.target.textContent);\r\n    setValue(event.target.textContent);\r\n    setRows([]);\r\n    // console.log(\"happened on click\", event);\r\n  };\r\n  return (\r\n    <div ref={ref} className=\"auto-wrapper\">\r\n      <input\r\n        value={value}\r\n        type=\"search\"\r\n        onChange={onChange}\r\n        className=\"auto-input\"\r\n        placeholder={props.type ? \"Search in subtitle\" : \"Search in data-base\"}\r\n      />\r\n      <div className=\"list-group auto-ul-wrapper\">{rows}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default RBAutoCompleteSearch;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\RegistrationForm.js",["365","366","367"],"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"./Input\";\n// import Navigation from \"../../heading/navigation/Navigation\";\n\nimport Card from \"../../../../shared/components/UIElements/Card\";\nimport Button from \"../../../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../../../shared/hooks/http-hook\";\n// import ImageUpload from \"../../../../shared/components/FormElements/ImageUpload\";\nimport \"./auth.css\";\nimport jwt_decode from \"jwt-decode\";\n\nfunction RegistrationForm(props) {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  // Handling sign in with google\n  function googleCallBackResponseHandler(response) {\n    console.log(\"jwt token\", response.credential);\n    let userObject = jwt_decode(response.credential);\n    console.log(userObject);\n  }\n  useEffect(() => {\n    /* global google */\n    google.accounts.id.initialize({\n      client_id:\n        \"838879790668-013q6bp66h7kqtbjckmm68et0vgtfcr7.apps.googleusercontent.com\",\n      callback: googleCallBackResponseHandler,\n    });\n    google.accounts.id.renderButton(document.getElementById(\"googleSignin\"), {\n      theme: \"filled_blue\",\n      size: \"large\",\n      shape: \"pill\",\n      width: \"350\",\n    });\n  }, []);\n  // Handling sign in with google\n\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const validationSchema = Yup.object({\n    username: Yup.string().required(\"Required\"),\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n    password: Yup.string().required(\"Required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), \"\"], \"Passwords must match\")\n      .required(\"Required\"),\n  });\n\n  const history = useHistory();\n\n  const onRegitrationSubmitHandler = async (values) => {\n    try {\n      const signUpResponseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n        \"POST\",\n        JSON.stringify({\n          name: values.username,\n          email: values.email,\n          password: values.password,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      console.log(\"successfully signed up\");\n    } catch (err) {}\n\n    // logging in after signing up : start\n    try {\n      const logInResponseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n        \"POST\",\n        JSON.stringify({\n          email: values.email,\n          password: values.password,\n        }),\n\n        {\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      props.logInStatusHandler(\n        logInResponseData.userId,\n        logInResponseData.token\n      );\n      // console.log(\"successfully logged in\");\n      history.push(\"/\");\n    } catch (err) {}\n\n    // logging in after signing up : finish\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <ErrorModal error={error} onClear={clearError} />\n      <div className=\"auth-form \">\n        <h2 className=\"mb-4 text-center\">Create a free acount</h2>\n        {/* /////////////////////////////////////////////////////////// */}\n        {/* I wrapped the google signin div in another div with the height of 44px to reduce flickering. I learnt it in stack overflow.  */}\n        <div id=\"googleSigninContainer\">\n          <div id=\"googleSignin\"></div>\n        </div>\n        {/* /////////////////////////////////////////////////////////// */}\n        <div className=\"text-center my-4 \"> or </div>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onRegitrationSubmitHandler}\n        >\n          {(formik) => {\n            return (\n              <Form>\n                <Input type=\"username\" label=\"UserName\" name=\"username\" />\n                <Input type=\"email\" label=\"Email\" name=\"email\" />\n                <Input type=\"password\" label=\"Password\" name=\"password\" />\n                <Input\n                  type=\"password\"\n                  label=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                />\n                {/* <ImageUpload center id=\"image\" /> */}\n\n                <button\n                  type=\"submit\"\n                  disabled={!formik.isValid}\n                  className=\"rounded-pill w-100 bg-warning py-2 fw-bold\"\n                >\n                  Sign up\n                </button>\n              </Form>\n            );\n          }}\n        </Formik>\n      </div>\n    </div>\n  );\n}\n\nexport default RegistrationForm;\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\LoginForm.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Ttest.js",["368"],"import React, { useEffect } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"bootstrap/dist/js/bootstrap.min.js\";\r\n// import { Tooltip } from \"bootstrap/dist/js/bootstrap.esm.min.js\";\r\nfunction Ttest() {\r\n  //   React.useEffect(() => {\r\n  //     (function () {\r\n  //       var tooltipTriggerList = [].slice.call(\r\n  //         document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\r\n  //       );\r\n  //       var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n  //         return new Tooltip(tooltipTriggerEl);\r\n  //       });\r\n  //     })();\r\n  //   }, []);\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"tt btn btn-secondary\"\r\n        data-bs-toggle=\"tooltip\"\r\n        data-bs-placement=\"top\"\r\n        title=\"Tooltip on top\"\r\n      >\r\n        Tooltip on top\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"tt btn btn-secondary\"\r\n        data-bs-toggle=\"tooltip\"\r\n        data-bs-placement=\"right\"\r\n        title=\"Tooltip on right\"\r\n      >\r\n        Tooltip on right\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"tt btn btn-secondary\"\r\n        data-bs-toggle=\"tooltip\"\r\n        data-bs-placement=\"bottom\"\r\n        title=\"Tooltip on bottom\"\r\n      >\r\n        Tooltip on bottom\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"tt btn btn-secondary\"\r\n        data-bs-toggle=\"tooltip\"\r\n        data-bs-placement=\"left\"\r\n        title=\"Tooltip on left\"\r\n      >\r\n        Tooltip on left\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Ttest;\r\n",["369","370"],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\hooks\\http-hook.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\AutoCompleteSearch.js",["371"],"import React, { useState, useRef } from \"react\";\r\n\r\nimport Fuse from \"fuse.js\";\r\n\r\nimport \"./AutoCompleteSearch.css\";\r\n\r\nconst AutoCompleteSearch = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const ref = useRef();\r\n\r\n  React.useEffect(() => {\r\n    (function () {\r\n      let activeElIndex = 0;\r\n      const children = ref.current.children;\r\n      ref.current.addEventListener(\"keydown\", (event) => {\r\n        // const activeElement = document.activeElement;\r\n        if (event.key === \"ArrowUp\") {\r\n          if (activeElIndex > 0) {\r\n            activeElIndex--;\r\n            if (activeElIndex > 0) {\r\n              children[1].children[0].children[\r\n                activeElIndex - 1\r\n              ].children[0].focus({\r\n                preventScroll: true,\r\n              });\r\n            } else children[0].focus({ preventScroll: true });\r\n          }\r\n          // if (activeEl.nodeName.toLowerCase() === \"input\") {\r\n          //   // console.log(\"hello me\");\r\n          //   // var val = activeEl.value; //store the value of the element\r\n          //   // activeEl.value = \"\"; //clear the value of the element\r\n          //   // activeEl.value = val; //set that value back.\r\n          //   // let end = activeEl.value.length;\r\n          //   // // ✅ Move focus to END of input field\r\n          //   // activeEl.setSelectionRange(end, end);\r\n          //   activeEl.select();\r\n          // }\r\n\r\n          // children[activeElIndex].select();\r\n\r\n          // console.log(\"active\", document.activeElement);\r\n        }\r\n        if (event.key === \"ArrowDown\") {\r\n          activeElIndex++;\r\n          // console.log(\"n of children[1]\", children[1].children.length);\r\n          console.log(\"actice el\", document.activeElement);\r\n          // console.log(\"n of children[1]\", children[1].children.length);\r\n\r\n          if (activeElIndex < children[1].children[0].children.length + 1)\r\n            children[1].children[0].children[\r\n              activeElIndex - 1\r\n            ].children[0].focus({\r\n              preventScroll: true,\r\n            });\r\n          else activeElIndex--;\r\n\r\n          // console.log(children[activeElIndex]);\r\n        }\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  const list = [\r\n    {\r\n      title: \"Old Man's War\",\r\n      author: {\r\n        firstName: \"John\",\r\n        lastName: \"Scalzi\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Lock Artist\",\r\n      author: {\r\n        firstName: \"Steve\",\r\n        lastName: \"Hamilton\",\r\n      },\r\n    },\r\n    {\r\n      title: \"HTML5\",\r\n      author: {\r\n        firstName: \"Remy\",\r\n        lastName: \"Sharp\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Right Ho Jeeves\",\r\n      author: {\r\n        firstName: \"P.D\",\r\n        lastName: \"Woodhouse\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Code of the Wooster\",\r\n      author: {\r\n        firstName: \"P.D\",\r\n        lastName: \"Woodhouse\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Thank You Jeeves\",\r\n      author: {\r\n        firstName: \"P.D\",\r\n        lastName: \"Woodhouse\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The DaVinci Code\",\r\n      author: {\r\n        firstName: \"Dan\",\r\n        lastName: \"Brown\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Angels & Demons\",\r\n      author: {\r\n        firstName: \"Dan\",\r\n        lastName: \"Brown\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Silmarillion\",\r\n      author: {\r\n        firstName: \"J.R.R\",\r\n        lastName: \"Tolkien\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Syrup\",\r\n      author: {\r\n        firstName: \"Max\",\r\n        lastName: \"Barry\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Lost Symbol\",\r\n      author: {\r\n        firstName: \"Dan\",\r\n        lastName: \"Brown\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Book of Lies\",\r\n      author: {\r\n        firstName: \"Brad\",\r\n        lastName: \"Meltzer\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Lamb\",\r\n      author: {\r\n        firstName: \"Christopher\",\r\n        lastName: \"Moore\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Fool\",\r\n      author: {\r\n        firstName: \"Christopher\",\r\n        lastName: \"Moore\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Incompetence\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Fat\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Colony\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Backwards, Red Dwarf\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Grand Design\",\r\n      author: {\r\n        firstName: \"Stephen\",\r\n        lastName: \"Hawking\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Book of Samson\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Preservationist\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Fallen\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Monster 1959\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n  ];\r\n  const options = {\r\n    // isCaseSensitive: false,\r\n    // includeScore: false,\r\n    // shouldSort: true,\r\n    // includeMatches: false,\r\n    // findAllMatches: false,\r\n    // minMatchCharLength: 1,\r\n    // location: 0,\r\n    // threshold: 0.6,\r\n    // distance: 100,\r\n    // useExtendedSearch: false,\r\n    // ignoreLocation: false,\r\n    // ignoreFieldNorm: false,\r\n    // fieldNormWeight: 1,\r\n    // keys: [\"title\", \"author.firstName\"],\r\n    // keys: [\"word\"],\r\n    keys: [\"word\"],\r\n  };\r\n\r\n  const fuse = new Fuse(props.items, options);\r\n  // console.log(\"mwwwwwwwwwww\", props.items);\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n    const searchSuggestions = fuse.search(event.target.value);\r\n    console.log(searchSuggestions);\r\n\r\n    const newRows = searchSuggestions.map((item) => (\r\n      <li tabIndex={0} className=\"auto-li\">\r\n        <button className=\"auto-b\">{item.item.word}</button>\r\n        <p className=\"auto-p\">shwrthwj5j57j7537i576i7i</p>\r\n      </li>\r\n    ));\r\n    setRows(newRows);\r\n  };\r\n  return (\r\n    <div ref={ref} className=\"auto-wrapper\">\r\n      <input\r\n        value={value}\r\n        type=\"search\"\r\n        onChange={onChange}\r\n        className=\"auto-input\"\r\n      />\r\n      <div className=\"auto-ul-wrapper\">\r\n        <ul className=\"auto-ul\">{rows}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoCompleteSearch;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\pages\\SignUp.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\Input.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\LoadingSpinner.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\Registration\\formik\\TextError.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\ErrorModal.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Card.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\hooks\\form-hook.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\heading\\Header.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\user\\components\\UsersList.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\footer\\Footer.js",["372","373","374","375","376","377","378","379"],"import React from \"react\";\r\nimport pic from \"./icon.png\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\" bg-dark text-white py-4\">\r\n      <ul className=\" list-group list-group-horizontal bg-dark justify-content-evenly\">\r\n        <li className=\"list-group-item-dark  \" style={{ listStyle: \"none\" }}>\r\n          <a className=\"text-decoration-none text-white \" href=\"#\">\r\n            About\r\n          </a>\r\n        </li>\r\n        <li className=\"list-group-item-dark \" style={{ listStyle: \"none\" }}>\r\n          <a className=\"text-decoration-none text-white\" href=\"#\">\r\n            Pricing\r\n          </a>\r\n        </li>\r\n        <li className=\"list-group-item-dark \" style={{ listStyle: \"none\" }}>\r\n          <a className=\"text-decoration-none text-white\" href=\"#\">\r\n            Terms of Use\r\n          </a>\r\n        </li>\r\n        <li className=\"list-group-item-dark \" style={{ listStyle: \"none\" }}>\r\n          <a className=\"text-decoration-none text-white\" href=\"#\">\r\n            Privacy Policy\r\n          </a>\r\n        </li>\r\n        <li className=\"list-group-item-dark \" style={{ listStyle: \"none\" }}>\r\n          <a className=\"text-decoration-none text-white\" href=\"#\">\r\n            Careers\r\n          </a>\r\n        </li>\r\n        <li className=\"list-group-item-dark \" style={{ listStyle: \"none\" }}>\r\n          <a className=\"text-decoration-none text-white\" href=\"#\">\r\n            Blog\r\n          </a>\r\n        </li>\r\n        <li className=\"list-group-item-dark \" style={{ listStyle: \"none\" }}>\r\n          <a className=\"text-decoration-none text-white\" href=\"#\">\r\n            Contact Us\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <img src={pic} alt=\"Logo\" className=\" d-block mx-auto py-5\" />\r\n      <p className=\"text-center\">\r\n        &copy; Copyright by\r\n        <a\r\n          className=\"text-decoration-none text-white twitter-link\"\r\n          target=\"_blank\"\r\n          href=\"https://twitter.com/jonasschmedtman\"\r\n        >\r\n          Jonas Schmedtmann\r\n        </a>\r\n        . Use for learning or your portfolio. Don't use to teach. Don't claim as\r\n        your own product.\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\features\\Features.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\FormElements\\Button.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\context\\auth-context.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\FormElements\\Input.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\util\\validators.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Modal.js",["380","381"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./Modal.css\";\nimport Backdrop from \"./Backdrop\";\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {/* {props.show && <Backdrop onClick={props.onCancel} />} */}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"my-modal\"\n      >\n        <div className=\"my-modal-background\" onClick={props.onCancel}>\n          <div className={`my-modal ${props.className}`} style={props.style}>\n            {/* <header className={`my-modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header> */}\n            <form\n              onSubmit={\n                props.onSubmit\n                  ? props.onSubmit\n                  : (event) => event.preventDefault()\n              }\n            >\n              <div className={`my-modal__content ${props.contentClass}`}>\n                {props.children}\n              </div>\n              <footer className={`my-modal__footer ${props.footerClass}`}>\n                {props.footer}\n              </footer>\n            </form>\n          </div>\n        </div>\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\user\\components\\UserItem.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\main\\components\\heading\\header-title\\HeaderTitle.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Backdrop.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\Avatar.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\UserCourses.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\NewCourse.js",["382","383","384","385"],"import React, { useState } from \"react\";\r\nimport CourseNavbar from \"./CourseNavbar\";\r\nimport CourseSection from \"./CourseSection\";\r\nimport CourseProfile from \"./CourseProfile\";\r\nimport CoursePublish from \"./CoursePublish\";\r\nimport \"./NewCourse.css\";\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nfunction NewCourse(props) {\r\n  const [selectedTab, setSelectedTab] = useState(\"profile\");\r\n  const [courseData, setCourseData] = useState({\r\n    profile: { name: \"\", description: \"\" },\r\n    sections: [\r\n      {\r\n        subtitleUploaded: false,\r\n        videoUploaded: false,\r\n        words: [{ subtitleWord: [], databaseWord: [] }],\r\n      },\r\n    ],\r\n  });\r\n  const [databaseWords, setDatabaseWords] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  // FOR SAVING SUBTITLE FILES AND THEIR SCRS BETWEEN RE-RENDERS\r\n  const [subtitles, setSubtitles] = useState([\r\n    { subtitleFile: null, subtitleSrc: null },\r\n  ]);\r\n  ////////////////////\r\n\r\n  const currentSectionIndex = selectedTab.includes(\"section\")\r\n    ? Number(selectedTab.slice(8)) - 1\r\n    : null;\r\n\r\n  ///////////\r\n  // FUNCTIONS TO SET DIFFERENT PARTS OF COURSE DATA\r\n  const setCourseName = (courseName) =>\r\n    setCourseData({\r\n      ...courseData,\r\n      profile: { ...courseData.profile, name: courseName },\r\n    });\r\n\r\n  const setCourseDescription = (courseDescription) =>\r\n    setCourseData({\r\n      ...courseData,\r\n      profile: { ...courseData.profile, description: courseDescription },\r\n    });\r\n  const setSectionData = (sectionData) => {\r\n    setCourseData({\r\n      ...courseData,\r\n      sections: [\r\n        ...courseData.sections.slice(0, currentSectionIndex),\r\n        sectionData,\r\n        ...courseData.sections.slice(currentSectionIndex + 1),\r\n      ],\r\n    });\r\n  };\r\n  const addSection = () => {\r\n    setCourseData({\r\n      ...courseData,\r\n      sections: [\r\n        ...courseData.sections,\r\n        {\r\n          subtitleUploaded: false,\r\n          videoUploaded: false,\r\n          words: [{ subtitleWord: [], databaseWord: [] }],\r\n        },\r\n      ],\r\n    });\r\n    setSelectedTab(`section_${courseData.sections.length + 1}`);\r\n  };\r\n  //////////////\r\n  // FOR SAVING SUBTITLE FILES AND THEIR SCRS BETWEEN RE-RENDERS\r\n\r\n  const setSectionSubtitleFile = (newSubtitleFile) => {\r\n    setSubtitles((subtitles) => [\r\n      ...subtitles.slice(0, currentSectionIndex),\r\n      { ...subtitles[currentSectionIndex], subtitleFile: newSubtitleFile },\r\n      ...subtitles.slice(currentSectionIndex + 1),\r\n    ]);\r\n  };\r\n  const setSectionSubtitleSrc = (newSubtitleSrc) => {\r\n    setSubtitles((subtitles) => [\r\n      ...subtitles.slice(0, currentSectionIndex),\r\n      { ...subtitles[currentSectionIndex], subtitleSrc: newSubtitleSrc },\r\n      ...subtitles.slice(currentSectionIndex + 1),\r\n    ]);\r\n  };\r\n  ///////////////////////\r\n  //// GETTING ALL THE WORDS FROM DATABASE\r\n  React.useEffect(() => {\r\n    (function () {\r\n      const dataRetreive = async () => {\r\n        try {\r\n          const retrievedDatabaseWords = await sendRequest(\r\n            process.env.REACT_APP_BACKEND_URL + \"/words\"\r\n          );\r\n          // console.log(\"this is all the words\", retrievedDatabaseWords);\r\n\r\n          //// to add id key. we have _id key but I need id key.\r\n          retrievedDatabaseWords.forEach((data) => {\r\n            data.id = data._id;\r\n          });\r\n          ////\r\n          setDatabaseWords(retrievedDatabaseWords);\r\n        } catch (err) {\r\n          console.log(\"sth wrong happened when loading words from database\");\r\n        }\r\n      };\r\n      dataRetreive();\r\n    })();\r\n  }, []);\r\n  //////////////////////////\r\n  /////////////////////\r\n  let tabCorrespondingElement;\r\n  if (selectedTab === \"profile\")\r\n    tabCorrespondingElement = (\r\n      <CourseProfile\r\n        courseName={courseData.profile.name}\r\n        setCourseName={setCourseName}\r\n        courseDescription={courseData.profile.description}\r\n        setCourseDescription={setCourseDescription}\r\n      />\r\n    );\r\n  else if (selectedTab === \"publish\")\r\n    tabCorrespondingElement = <CoursePublish courseData={courseData} />;\r\n  else {\r\n    tabCorrespondingElement = (\r\n      <CourseSection\r\n        courseName={courseData.profile.name}\r\n        courseSection={selectedTab}\r\n        ////////////\r\n        key={selectedTab}\r\n        databaseWords={databaseWords}\r\n        sectionData={courseData.sections[currentSectionIndex]}\r\n        setSectionData={setSectionData}\r\n        //////////////\r\n        subtitleFile={subtitles[currentSectionIndex]?.subtitleFile}\r\n        setSubtitleFile={setSectionSubtitleFile}\r\n        subtitleSrc={subtitles[currentSectionIndex]?.subtitleSrc}\r\n        setSubtitleSrc={setSectionSubtitleSrc}\r\n      />\r\n    );\r\n  }\r\n  console.log(\"this is course data\", courseData);\r\n\r\n  ////////////////////////\r\n  return (\r\n    <div className=\"new-course\">\r\n      <CourseNavbar\r\n        selectedTab={selectedTab}\r\n        setSelectedTab={setSelectedTab}\r\n        sectionsNumber={courseData.sections.length}\r\n        addSection={addSection}\r\n      />\r\n      {tabCorrespondingElement}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCourse;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordInput.js",["386"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Input from \"../../main/components/Registration/formik/Input\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nfunction WordInput(props) {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const initialValues = {\r\n    word: \"\",\r\n    hour: 1,\r\n    minute: 1,\r\n    second: 1,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    word: Yup.string().required(\"Required\"),\r\n    hour: Yup.number().required(\"Required\"),\r\n    minute: Yup.number().required(\"Required\"),\r\n    second: Yup.number().required(\"Required\"),\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/courses\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          word: values.word,\r\n          hour: values.hour,\r\n          minute: values.minute,\r\n          second: values.second,\r\n          creator: props.userId,\r\n        }),\r\n        { \"Content-Type\": \"application/json\" }\r\n      );\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <Form>\r\n              <Input name=\"word\" type=\"input\" label=\"word\" />\r\n              <Input name=\"hour\" type=\"input\" label=\"hour\" />\r\n              <Input name=\"minute\" type=\"input\" label=\"minute\" />\r\n              <Input name=\"second\" type=\"input\" label=\"second\" />\r\n              <button type=\"submit\" disabled={!formik.isValid}>\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default WordInput;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordImageInput.js",["387","388","389","390","391","392","393","394","395","396","397","398"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Input from \"../../main/components/Registration/formik/Input\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { ErrorMessage } from \"formik\";\r\nimport TextError from \"../../main/components/Registration/formik/TextError\";\r\nimport Progress from \"./Progress\";\r\nimport axios from \"axios\";\r\n\r\nimport WordItem from \"./WordItem\";\r\n\r\nimport \"./wordImageInput.css\";\r\n\r\nfunction WordImageInput(props) {\r\n  const [database, setDatabase] = useState([]);\r\n  const [words, setWords] = useState([]);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  /////////////////////////\r\n  const list = [\r\n    {\r\n      title: \"Old Man's War\",\r\n      author: {\r\n        firstName: \"John\",\r\n        lastName: \"Scalzi\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Lock Artist\",\r\n      author: {\r\n        firstName: \"Steve\",\r\n        lastName: \"Hamilton\",\r\n      },\r\n    },\r\n    {\r\n      title: \"HTML5\",\r\n      author: {\r\n        firstName: \"Remy\",\r\n        lastName: \"Sharp\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Right Ho Jeeves\",\r\n      author: {\r\n        firstName: \"P.D\",\r\n        lastName: \"Woodhouse\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Code of the Wooster\",\r\n      author: {\r\n        firstName: \"P.D\",\r\n        lastName: \"Woodhouse\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Thank You Jeeves\",\r\n      author: {\r\n        firstName: \"P.D\",\r\n        lastName: \"Woodhouse\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The DaVinci Code\",\r\n      author: {\r\n        firstName: \"Dan\",\r\n        lastName: \"Brown\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Angels & Demons\",\r\n      author: {\r\n        firstName: \"Dan\",\r\n        lastName: \"Brown\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Silmarillion\",\r\n      author: {\r\n        firstName: \"J.R.R\",\r\n        lastName: \"Tolkien\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Syrup\",\r\n      author: {\r\n        firstName: \"Max\",\r\n        lastName: \"Barry\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Lost Symbol\",\r\n      author: {\r\n        firstName: \"Dan\",\r\n        lastName: \"Brown\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Book of Lies\",\r\n      author: {\r\n        firstName: \"Brad\",\r\n        lastName: \"Meltzer\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Lamb\",\r\n      author: {\r\n        firstName: \"Christopher\",\r\n        lastName: \"Moore\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Fool\",\r\n      author: {\r\n        firstName: \"Christopher\",\r\n        lastName: \"Moore\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Incompetence\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Fat\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Colony\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Backwards, Red Dwarf\",\r\n      author: {\r\n        firstName: \"Rob\",\r\n        lastName: \"Grant\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Grand Design\",\r\n      author: {\r\n        firstName: \"Stephen\",\r\n        lastName: \"Hawking\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Book of Samson\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n    {\r\n      title: \"The Preservationist\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Fallen\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n    {\r\n      title: \"Monster 1959\",\r\n      author: {\r\n        firstName: \"David\",\r\n        lastName: \"Maine\",\r\n      },\r\n    },\r\n  ];\r\n  const options = {\r\n    // isCaseSensitive: false,\r\n    // includeScore: false,\r\n    // shouldSort: true,\r\n    // includeMatches: false,\r\n    // findAllMatches: false,\r\n    // minMatchCharLength: 1,\r\n    // location: 0,\r\n    // threshold: 0.6,\r\n    // distance: 100,\r\n    // useExtendedSearch: false,\r\n    // ignoreLocation: false,\r\n    // ignoreFieldNorm: false,\r\n    // fieldNormWeight: 1,\r\n    // keys: [\"title\", \"author.firstName\"],\r\n    keys: [\"title\"],\r\n  };\r\n  // const fuse = new Fuse(list, options);\r\n  ///////////////////\r\n  React.useEffect(() => {\r\n    (function () {\r\n      const dataRetreive = async () => {\r\n        try {\r\n          const retrievedDatabase = await sendRequest(\r\n            process.env.REACT_APP_BACKEND_URL + \"/database\"\r\n          );\r\n          //// to add id key. we have _id key but I need id key.\r\n          retrievedDatabase.forEach((data) => {\r\n            data.id = data._id;\r\n          });\r\n          ////\r\n          setDatabase(retrievedDatabase);\r\n        } catch (err) {\r\n          console.log(\"sth wrong happened\");\r\n        }\r\n      };\r\n      dataRetreive();\r\n    })();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    (function () {\r\n      const video = document.getElementById(\"vp-video\");\r\n      const track = document.getElementById(\"vp-track\");\r\n      const wordFilter = [\r\n        \"\",\r\n        \".\",\r\n        \"?\",\r\n        \"!\",\r\n        \"a\",\r\n        \"I\",\r\n        \"an\",\r\n        \"on\",\r\n        \"that\",\r\n        \"to\",\r\n        \"is\",\r\n        \"-\",\r\n      ];\r\n      track.addEventListener(`load`, () => {\r\n        // video.textTracks[0].cues.forEach((element) => console.log(element));\r\n        // console.log(video.textTracks[0].cues);\r\n        let wordId = 0;\r\n        let allWords = [];\r\n        for (let i = 0; i < video.textTracks[0].cues.length; i++) {\r\n          // Runs 5 times, with values of step 0 through 4.\r\n          // console.log(video.textTracks[0].cues[i]);\r\n          let cue = video.textTracks[0].cues[i];\r\n          let text = cue.text;\r\n          text = text\r\n            .replaceAll(\".\", \" .\")\r\n            .replaceAll(\"?\", \" ?\")\r\n            .replaceAll(\"\\n\", \" \");\r\n\r\n          let cueWords = text.split(\" \");\r\n          cueWords = cueWords.map((word) => word.trim());\r\n          cueWords = cueWords.filter((word) => !wordFilter.includes(word));\r\n\r\n          cueWords = cueWords.map((word) => {\r\n            wordId++;\r\n            return {\r\n              word: word,\r\n              cueId: cue.id,\r\n              id: wordId,\r\n            };\r\n          });\r\n\r\n          allWords = [...allWords, ...cueWords];\r\n        }\r\n        setWords(allWords);\r\n        // for (const cue in video.textTracks[0].cues) {\r\n        //   console.log(cue);\r\n        // }\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  // const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const FILE_SIZE = 300000000;\r\n  const SUPPORTED_FORMATS = [\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/png\",\r\n    \"video/mp4\",\r\n  ];\r\n\r\n  const initialValues = {\r\n    word: \"\",\r\n    hour: 1,\r\n    minute: 1,\r\n    second: 1,\r\n    image: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    word: Yup.string().required(\"Required\"),\r\n    hour: Yup.number().required(\"Required\"),\r\n    minute: Yup.number().required(\"Required\"),\r\n    second: Yup.number().required(\"Required\"),\r\n    image: Yup.mixed()\r\n      .test(\"FILE_SIZE\", \"File Size is too large\", (value) =>\r\n        !value ? true : value.size <= FILE_SIZE\r\n      )\r\n      .test(\"SUPPORTED_FORMATS\", \"Unsupported File Format\", (value) =>\r\n        !value ? true : SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    // console.log(values);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"word\", values.word);\r\n      formData.append(\"hour\", values.hour);\r\n      formData.append(\"minute\", values.minute);\r\n      formData.append(\"second\", values.second);\r\n      formData.append(\"creator\", props.userId);\r\n      formData.append(\"image\", values.image);\r\n\r\n      console.log(formData);\r\n      //   const responseData = await sendRequest(\r\n      //     \"http://localhost:5000/api/courses\",\r\n      //     \"POST\",\r\n      //     formData\r\n      //   );\r\n      // } catch (err) {}\r\n\r\n      const responseData = await axios.post(\r\n        process.env.REACT_APP_BACKEND_URL + \"/courses\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n          onUploadProgress: (progressEvent) => {\r\n            setUploadPercentage(\r\n              parseInt(\r\n                Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n              )\r\n            );\r\n          },\r\n        }\r\n      );\r\n    } catch (err) {\r\n      // if (err.response.status === 500) {\r\n      //   setMessage('There was a problem with the server');\r\n      // } else {\r\n      //   setMessage(err.response.data.msg);\r\n      // }\r\n      // setUploadPercentage(0)\r\n    }\r\n\r\n    //   history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <video id=\"vp-video\" controls preload=\"metadata\" className=\"d-none\">\r\n        {/* <source src={videosource} /> */}\r\n        <track\r\n          label=\"English\"\r\n          kind=\"subtitles\"\r\n          srcLang=\"en\"\r\n          // src=\"media/friends.s01e01_720p_bluray_x264-sujaidr.vtt\"\r\n          default\r\n          id=\"vp-track\"\r\n        />\r\n      </video>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <Form>\r\n              <Input name=\"word\" type=\"input\" label=\"word\" />\r\n              <Input name=\"hour\" type=\"input\" label=\"hour\" />\r\n              <Input name=\"minute\" type=\"input\" label=\"minute\" />\r\n              <Input name=\"second\" type=\"input\" label=\"second\" />\r\n              <input\r\n                name=\"image\"\r\n                type=\"file\"\r\n                label=\"image\"\r\n                onChange={(event) => {\r\n                  formik.setFieldValue(\"image\", event.currentTarget.files[0]);\r\n                }}\r\n              />\r\n              {formik.errors.image ? (\r\n                <div className=\"error\">{formik.errors.image}</div>\r\n              ) : null}\r\n              <Progress percentage={uploadPercentage} />\r\n\r\n              <button type=\"submit\" disabled={!formik.isValid}>\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default WordImageInput;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\ImageInput.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\UpdateCourse.js",["399"],"import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Formik, Form, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"../../main/components/Registration/formik/Input\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UpdateCourse = (props) => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedCourse, setLoadedCourse] = useState();\n  const courseId = useParams().courseId;\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchCourse = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + `/courses/${courseId}`\n        );\n        setLoadedCourse(responseData.course);\n      } catch (err) {}\n    };\n    fetchCourse();\n  }, [sendRequest, courseId]);\n\n  const initialValues = {\n    word: loadedCourse?.word || \"\",\n    hour: loadedCourse?.hour || \"\",\n    minute: loadedCourse?.minute || \"\",\n    second: loadedCourse?.second || \"\",\n  };\n\n  const validationSchema = Yup.object({\n    word: Yup.string().required(\"Required\"),\n    hour: Yup.number().required(\"Required\"),\n    minute: Yup.number().required(\"Required\"),\n    second: Yup.number().required(\"Required\"),\n  });\n\n  const courseUpdateSubmitHandler = async (values) => {\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL +`/courses/${courseId}`,\n        \"PATCH\",\n        JSON.stringify({\n          word: values.word,\n          hour: values.hour,\n          minute: values.minute,\n          second: values.second,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      history.push(\"/courses/user/\" + props.userId);\n    } catch (err) {}\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && <LoadingSpinner asOverlay />}\n      <Formik\n        initialValues={initialValues}\n        onSubmit={courseUpdateSubmitHandler}\n        validationSchema={validationSchema}\n        enableReinitialize\n      >\n        {(formik) => {\n          return (\n            <Form className=\"course-form\">\n              <Input name=\"word\" type=\"input\" label=\"word\" />\n              <Input name=\"hour\" type=\"input\" label=\"hour\" />\n              <Input name=\"minute\" type=\"input\" label=\"minute\" />\n              <Input name=\"second\" type=\"input\" label=\"second\" />\n              <button type=\"submit\" disabled={!formik.isValid}>\n                UPDATE Course\n              </button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </React.Fragment>\n  );\n};\nexport default UpdateCourse;\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CourseSection.js",["400"],"import React, { useState } from \"react\";\r\n\r\nimport WordsPart from \"./WordsPart\";\r\nimport SubtitleUploadPart from \"./SubtitleUploadPart\";\r\nimport VideoUploadPart from \"./VideoUploadPart\";\r\nimport \"./CourseSection.css\";\r\n\r\nfunction CourseSection({\r\n  courseName,\r\n  courseSection,\r\n  ////////////////\r\n  databaseWords,\r\n  sectionData,\r\n  setSectionData,\r\n  /////////\r\n  subtitleFile,\r\n  setSubtitleFile,\r\n  subtitleSrc,\r\n  setSubtitleSrc,\r\n}) {\r\n  const [subtitleWords, setSubtitleWords] = useState([]);\r\n  const [cues, setCues] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    (function () {\r\n      if (subtitleSrc) {\r\n        const video = document.getElementById(\"vp-video\");\r\n        const track = document.getElementById(\"vp-track\");\r\n        const wordFilter = [\r\n          \"\",\r\n          \".\",\r\n          \"?\",\r\n          \"!\",\r\n          \"a\",\r\n          \"I\",\r\n          \"an\",\r\n          \"on\",\r\n          \"that\",\r\n          \"to\",\r\n          \"is\",\r\n          \"-\",\r\n        ];\r\n        track.addEventListener(`load`, () => {\r\n          // video.textTracks[0].cues.forEach((element) => console.log(element));\r\n          // console.log(video.textTracks[0].cues);\r\n          // const cues = Array.from(video.textTracks[0].cues, (cue) => {\r\n          //   return { id: cue.id, text: cue.text };\r\n          // });\r\n          console.log(\"hello i'm starting\");\r\n          let wordId = 0;\r\n          let allWords = [];\r\n          let allCues = [];\r\n          for (let i = 0; i < video.textTracks[0].cues.length; i++) {\r\n            let cue = video.textTracks[0].cues[i];\r\n            // console.log(allCues);\r\n            let text = cue.text;\r\n            text = text\r\n              .replaceAll(\".\", \" .\")\r\n              .replaceAll(\"?\", \" ?\")\r\n              .replaceAll(\"\\n\", \" \");\r\n\r\n            allCues.push({ id: cue.id, text: text });\r\n            let cueWords = text.split(\" \");\r\n            cueWords = cueWords.map((word) => word.trim());\r\n            cueWords = cueWords.filter((word) => !wordFilter.includes(word));\r\n\r\n            cueWords = cueWords.map((word) => {\r\n              wordId++;\r\n              return {\r\n                title: word,\r\n                cueId: cue.id,\r\n                id: wordId,\r\n              };\r\n            });\r\n\r\n            allWords = [...allWords, ...cueWords];\r\n          }\r\n          setSubtitleWords(allWords);\r\n          setCues(allCues);\r\n        });\r\n      }\r\n    })();\r\n  }, [subtitleSrc]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <SubtitleUploadPart\r\n          className=\" w-50 mx-auto\"\r\n          subtitleFile={subtitleFile}\r\n          setSubtitleSrc={setSubtitleSrc}\r\n          setSubtitleFile={setSubtitleFile}\r\n          courseName={courseName}\r\n          courseSection={courseSection}\r\n          ////////////////\r\n          subtitleUploaded={sectionData.subtitleUploaded}\r\n          setSubtitleUploaded={(boolean) =>\r\n            setSectionData({ ...sectionData, subtitleUploaded: boolean })\r\n          }\r\n        />\r\n        <VideoUploadPart\r\n          className=\"w-50 mx-auto\"\r\n          courseName={courseName}\r\n          courseSection={courseSection}\r\n          ////////////\r\n          videoUploaded={sectionData.videoUploaded}\r\n          setSubtitleUploaded={(boolean) =>\r\n            setSectionData({ ...sectionData, videoUploaded: boolean })\r\n          }\r\n        />\r\n        <video id=\"vp-video\" controls preload=\"metadata\" className=\"d-none\">\r\n          {/* <source src={videosource} /> */}\r\n          {subtitleSrc ? (\r\n            <track\r\n              label=\"English\"\r\n              kind=\"subtitles\"\r\n              srcLang=\"en\"\r\n              // src=\"media/friends.s01e01_720p_bluray_x264-sujaidr.vtt\"\r\n              src={subtitleSrc}\r\n              default\r\n              id=\"vp-track\"\r\n            />\r\n          ) : null}\r\n        </video>\r\n        <WordsPart\r\n          subtitleWords={subtitleWords}\r\n          databaseWords={databaseWords}\r\n          cues={cues}\r\n          /////////////\r\n          wordList={sectionData.words}\r\n          setWordList={(newWords) =>\r\n            setSectionData({ ...sectionData, words: newWords })\r\n          }\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default CourseSection;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\CourseItem.js",["401"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./CourseItem.css\";\nfunction CourseItem({ id, name, imgSrc, description }) {\n  return (\n    <Link className=\"course-item\" to={`/courses/view/${id}`}>\n      <img src={imgSrc} />\n      <h3>{name}</h3>\n      <p>{description}</p>\n    </Link>\n  );\n}\n\nexport default CourseItem;\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\Progress.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\SubtitleUploadPart.js",["402"],"import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FileUpload from \"./FileUpload\";\r\nfunction SubtitleUploadPart(props) {\r\n  return (\r\n    <div className=\"mb-3 w-75  mx-auto bg-warning rounded-4 py-2\">\r\n      <FileUpload\r\n        fileType=\"subtitle\"\r\n        uploadedFile={props.subtitleFile}\r\n        setUploadedFile={props.setSubtitleFile}\r\n        setUploadedFileSrc={props.setSubtitleSrc}\r\n        courseName={props.courseName}\r\n        courseSection={props.courseSection}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default SubtitleUploadPart;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordsPart.js",["403","404"],"import React, { useState } from \"react\";\r\nimport WordItem from \"./WordItem\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./WordsPart.css\";\r\n\r\nfunction WordsPart({\r\n  subtitleWords,\r\n  databaseWords,\r\n  cues,\r\n  /////////////\r\n  wordList,\r\n  setWordList,\r\n}) {\r\n  const [closeSuggestionBox, setCloseSuggestionBox] = useState(false);\r\n\r\n  const setSubtitleWord = (index, newSubtitleWord) => {\r\n    let wordListCopy = [...wordList];\r\n    wordListCopy[index].subtitleWord = newSubtitleWord;\r\n    const newWordList = [...wordListCopy];\r\n    setWordList(newWordList);\r\n  };\r\n  const setDatabaseWord = (index, newDatabaseWord) => {\r\n    let wordListCopy = [...wordList];\r\n    wordListCopy[index].databaseWord = newDatabaseWord;\r\n    const newWordList = [...wordListCopy];\r\n    setWordList(newWordList);\r\n  };\r\n\r\n  const handleWordAdd = () => {\r\n    setWordList([...wordList, { subtitleWord: [], databaseWord: [] }]);\r\n  };\r\n\r\n  const closeSuggestionBoxHandler = (event) => {\r\n    if (event.target.className !== \"auto-input\") setCloseSuggestionBox(true);\r\n  };\r\n\r\n  const handleWordRemove = (index) => {\r\n    let list = [...wordList];\r\n    list.splice(index, 1);\r\n    setWordList([...list]);\r\n  };\r\n\r\n  // const wordsSaveHandler = async () => {\r\n  //   // try {\r\n  //   //   await sendRequest(\r\n  //   //     process.env.REACT_APP_BACKEND_URL + \"/courses/words\",\r\n  //   //     \"POST\",\r\n  //   //     JSON.stringify({\r\n  //   //       name: \"friends\",\r\n  //   //       content: wordList,\r\n  //   //     }),\r\n  //   //     { \"Content-Type\": \"application/json\" }\r\n  //   //   );\r\n  //   // } catch (err) {}\r\n  //   console.log(\"wordList\", wordList);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"words-part\" onClick={closeSuggestionBoxHandler}>\r\n      {wordList.map((word, index) => (\r\n        <WordItem\r\n          subtitleWords={subtitleWords}\r\n          databaseWords={databaseWords}\r\n          cues={cues}\r\n          ///////////////\r\n          subtitleWord={word.subtitleWord}\r\n          databaseWord={word.databaseWord}\r\n          setSubtitleWord={(newSubtitleWord) =>\r\n            setSubtitleWord(index, newSubtitleWord)\r\n          }\r\n          setDatabaseWord={(newDatabaseWord) =>\r\n            setDatabaseWord(index, newDatabaseWord)\r\n          }\r\n          //////////////\r\n\r\n          handleWordRemove={() => handleWordRemove(index)}\r\n          closeSuggestionBox={closeSuggestionBox}\r\n          setCloseSuggestionBox={setCloseSuggestionBox}\r\n          ////////////////\r\n          key={index}\r\n        />\r\n      ))}\r\n      <button className=\"add\" onClick={handleWordAdd}>\r\n        Add a word\r\n      </button>\r\n      {/* <button className=\"save\" onClick={wordsSaveHandler}>\r\n        Save\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\nexport default WordsPart;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordItem.js",["405"],"import React, { useState } from \"react\";\r\nimport WordAutoCompleteSearch from \"./WordAutoCompleteSearch\";\r\nimport \"./WordItem.css\";\r\n\r\nfunction WordItem(props) {\r\n  return (\r\n    <div className=\"word-item\">\r\n      <WordAutoCompleteSearch\r\n        itemsToSearchIn={props.subtitleWords}\r\n        cues={props.cues}\r\n        type={\"subtitle\"}\r\n        /////////////\r\n        selectedItems={props.subtitleWord}\r\n        setSelectedItems={props.setSubtitleWord}\r\n        ////////////////////\r\n        closeSuggestionBox={props.closeSuggestionBox}\r\n        setCloseSuggestionBox={props.setCloseSuggestionBox}\r\n      />\r\n\r\n      <WordAutoCompleteSearch\r\n        itemsToSearchIn={props.databaseWords}\r\n        ////////////////\r\n        selectedItems={props.databaseWord}\r\n        setSelectedItems={props.setDatabaseWord}\r\n        ////////////////\r\n        closeSuggestionBox={props.closeSuggestionBox}\r\n        setCloseSuggestionBox={props.setCloseSuggestionBox}\r\n      />\r\n      <button className=\"remove\" onClick={props.handleWordRemove}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default WordItem;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\VideoUploadPart.js",["406"],"import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FileUpload from \"./FileUpload\";\r\n\r\nfunction VideoUploadPart(props) {\r\n  return (\r\n    <div className=\"mb-3 w-75  mx-auto bg-warning rounded-4 py-2\">\r\n      <FileUpload\r\n        fileType=\"video\"\r\n        courseName={props.courseName}\r\n        courseSection={props.courseSection}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default VideoUploadPart;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\VideoPlayer.js",["407","408","409","410","411","412","413","414","415","416","417"],"import React, { useState, useRef } from \"react\";\r\nimport \"./VideoPlayer.css\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Hls from \"hls.js\";\r\nimport { fabClasses } from \"@mui/material\";\r\n\r\nconst VideoPlayer = ({ data, videoSrc, subtitleURL }) => {\r\n  console.log(\"mmmmmmmmowwwwwwwwwww\", data);\r\n  ////////////////////////////////////////////////////////////////////////\r\n  // STATES:\r\n  const [rows, setRows] = useState([]);\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(\"false\");\r\n  // const [pronunciationSrc, setpronunciationSrc] = useState(false);\r\n  const [pronunciationSrc, setPronunciationSrc] = useState(null);\r\n  ///////////////////////\r\n  const [currentDataSet, setCurrentDataSet] = useState(data);\r\n  const [currentDataIndex, setCurrentDataIndex] = useState(0);\r\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\r\n  const [currentExampleIndex, setCurrentExampleIndex] = useState(0);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  ///////////////////////////////////////////////////////////////////////\r\n  // REFERENCES:\r\n  const videoContainerRef = useRef();\r\n  const videoRef = useRef();\r\n  const imageRef = useRef();\r\n  const trackRef = useRef();\r\n  const videoControlsRef = useRef();\r\n  // VIDEO CONTROL REFERENCES:\r\n  const playpauseRef = useRef();\r\n  const stopRef = useRef();\r\n  const muteRef = useRef();\r\n  const volumeRef = useRef();\r\n  const progressRef = useRef();\r\n  const fullscreenRef = useRef();\r\n  ///////////////////\r\n  let activeWordsBackwardArrow = true;\r\n  if (currentWordIndex === 0) activeWordsBackwardArrow = false;\r\n  ////\r\n  let activeWordsForwardArrow = true;\r\n  if (\r\n    currentWordIndex ===\r\n    currentDataSet[currentDataIndex]?.databaseWord.length - 1\r\n  )\r\n    activeWordsForwardArrow = false;\r\n  ////\r\n  let activeExamplesBackwardArrow = true;\r\n  if (currentExampleIndex === 0) activeExamplesBackwardArrow = false;\r\n  ////\r\n  let activeExamplesForwardArrow = true;\r\n  if (\r\n    currentExampleIndex ===\r\n    currentDataSet[currentDataIndex]?.databaseWord[currentWordIndex]?.meaning\r\n      .examples.length -\r\n      1\r\n  )\r\n    activeExamplesForwardArrow = false;\r\n  ////\r\n  let activeImagesBackwardArrow = true;\r\n  if (currentImageIndex === 0) activeImagesBackwardArrow = false;\r\n  ////\r\n  let activeImagesForwardArrow = true;\r\n  if (\r\n    currentImageIndex ===\r\n    currentDataSet[currentDataIndex]?.databaseWord[currentWordIndex]?.images\r\n      .length -\r\n      1\r\n  )\r\n    activeImagesForwardArrow = false;\r\n  ////////////////\r\n  let showImagesPart = false;\r\n  if (\r\n    showModal === \"true\" &&\r\n    currentDataSet[currentDataIndex]?.databaseWord[currentWordIndex]?.images\r\n      .length > 0\r\n  ) {\r\n    showImagesPart = true;\r\n  }\r\n  ///////////////////\r\n  let showExamplesPart = false;\r\n  if (\r\n    showModal === \"true\" &&\r\n    currentDataSet[currentDataIndex]?.databaseWord[currentWordIndex]?.meaning\r\n      .examples.length > 0\r\n  ) {\r\n    showExamplesPart = true;\r\n  }\r\n  ////////////////////////////////////////////////////\r\n  const wordClickHandler = (imgSrc, INDEX) => {\r\n    videoRef.current.pause();\r\n    setShowModal(\"true\");\r\n    // setImageSrc(imgSrc);\r\n    ////////////\r\n    setCurrentDataIndex(INDEX);\r\n  };\r\n\r\n  //////////////////////////////////////////\r\n\r\n  //////////////\r\n  // FULL SCREEN\r\n  // Check if the browser supports the Fullscreen API\r\n  const fullScreenEnabled = !!(\r\n    document.fullscreenEnabled ||\r\n    document.mozFullScreenEnabled ||\r\n    document.msFullscreenEnabled ||\r\n    document.webkitSupportsFullscreen ||\r\n    document.webkitFullscreenEnabled ||\r\n    document.createElement(\"video\").webkitRequestFullScreen\r\n  );\r\n  // If the browser doesn't support the Fulscreen API then hide the fullscreen button\r\n  if (!fullScreenEnabled) {\r\n    fullscreenRef.current.style.display = \"none\";\r\n  }\r\n\r\n  // Set the video container's fullscreen state\r\n  const setFullscreenData = function (state) {\r\n    videoContainerRef.current.setAttribute(\"data-fullscreen\", !!state);\r\n    // Set the fullscreen button's 'data-state' which allows the correct button image to be set via CSS\r\n    fullscreenRef.current.setAttribute(\r\n      \"data-state\",\r\n      !!state ? \"cancel-fullscreen\" : \"go-fullscreen\"\r\n    );\r\n  };\r\n\r\n  // Checks if the document is currently in fullscreen mode\r\n  const isFullScreen = function () {\r\n    return !!(\r\n      document.fullScreen ||\r\n      document.webkitIsFullScreen ||\r\n      document.mozFullScreen ||\r\n      document.msFullscreenElement ||\r\n      document.fullscreenElement\r\n    );\r\n  };\r\n\r\n  //// Handling full screen\r\n  const handleFullscreen = function () {\r\n    // If fullscreen mode is active...\r\n    if (isFullScreen()) {\r\n      // ...exit fullscreen mode\r\n      // (Note: this can only be called on document)\r\n      if (document.exitFullscreen) document.exitFullscreen();\r\n      else if (document.mozCancelFullScreen) document.mozCancelFullScreen();\r\n      else if (document.webkitCancelFullScreen)\r\n        document.webkitCancelFullScreen();\r\n      else if (document.msExitFullscreen) document.msExitFullscreen();\r\n      setFullscreenData(false);\r\n    } else {\r\n      // ...otherwise enter fullscreen mode\r\n      // (Note: can be called on document, but here the specific element is used as it will also ensure that the element's children, e.g. the custom controls, go fullscreen also)\r\n\r\n      if (videoContainerRef.current.requestFullscreen) {\r\n        videoContainerRef.current.requestFullscreen();\r\n      } else if (videoContainerRef.current.mozRequestFullScreen) {\r\n        videoContainerRef.current.mozRequestFullScreen();\r\n      } else if (videoContainerRef.current.webkitRequestFullScreen) {\r\n        // Safari 5.1 only allows proper fullscreen on the video element. This also works fine on other WebKit browsers as the following CSS (set in styles.css) hides the default controls that appear again, and\r\n        // ensures that our custom controls are visible:\r\n        // figure[data-fullscreen=true] video::-webkit-media-controls { display:none !important; }\r\n        // figure[data-fullscreen=true] .controls { z-index:2147483647; }\r\n        videoRef.current.webkitRequestFullScreen();\r\n      } else if (videoContainerRef.current.msRequestFullscreen)\r\n        videoContainerRef.current.msRequestFullscreen();\r\n      setFullscreenData(true);\r\n    }\r\n  };\r\n\r\n  //////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////\r\n  // Changes the button state of certain button's so the correct visuals can be displayed with CSS\r\n  const changeButtonState = function (type) {\r\n    // Play/Pause button\r\n    if (type == \"playpause\") {\r\n      if (videoRef.current.paused || videoRef.current.ended) {\r\n        playpauseRef.current.setAttribute(\"data-state\", \"play\");\r\n      } else {\r\n        playpauseRef.current.setAttribute(\"data-state\", \"pause\");\r\n      }\r\n    }\r\n    // Mute button\r\n    else if (type == \"mute\") {\r\n      muteRef.current.setAttribute(\r\n        \"data-state\",\r\n        videoRef.current.muted ? \"unmute\" : \"mute\"\r\n      );\r\n    }\r\n  };\r\n  ////////////////////////////////////////////////\r\n  ////////////// PLAY-PAUSE BUTTON\r\n\r\n  // Add events for all buttons\r\n\r\n  const handlePlayPause = (e) => {\r\n    if (videoRef.current.paused || videoRef.current.ended)\r\n      videoRef.current.play();\r\n    else videoRef.current.pause();\r\n  };\r\n\r\n  // The Media API has no 'stop()' function, so pause the video and reset its time and the progress bar\r\n  const handleStop = (e) => {\r\n    videoRef.current.pause();\r\n    videoRef.current.currentTime = 0;\r\n    // Update the play/pause button's 'data-state' which allows the correct button image to be set via CSS\r\n    changeButtonState(\"playpause\");\r\n  };\r\n\r\n  const handleMute = (e) => {\r\n    videoRef.current.muted = !videoRef.current.muted;\r\n    changeButtonState(\"mute\");\r\n  };\r\n\r\n  ///////// Handling video progress\r\n\r\n  // As the video is playing, update the progress bar\r\n  const handleProgressUpdate = () => {\r\n    // For mobile browsers, ensure that the progress element's max attribute is set\r\n    if (!progressRef.current.getAttribute(\"max\"))\r\n      progressRef.current.setAttribute(\"max\", videoRef.current.duration);\r\n    progressRef.current.value = videoRef.current.currentTime;\r\n  };\r\n\r\n  // React to the user clicking within the progress bar\r\n  const handleProgressClick = (e) => {\r\n    // Also need to take the parents into account here as .controls and figure now have position:relative\r\n    const pos =\r\n      (e.pageX -\r\n        (progressRef.current.offsetLeft +\r\n          progressRef.current.offsetParent.offsetLeft +\r\n          progressRef.current.offsetParent.offsetParent.offsetLeft)) /\r\n      progressRef.current.offsetWidth;\r\n    videoRef.current.currentTime = pos * videoRef.current.duration;\r\n  };\r\n\r\n  ////////////////////////////////////////////\r\n  // Handling volume change\r\n\r\n  const handleVolumeChange = (event) => {\r\n    videoRef.current.volume = event.target.value / 100;\r\n  };\r\n\r\n  //////////////////////////////////////////\r\n  // Wait for the video's meta data to be loaded, then set the progress bar's max value to the duration of the video\r\n\r\n  const handleProgressMaxValue = () => {\r\n    progressRef.current.setAttribute(\"max\", videoRef.current.duration);\r\n  };\r\n\r\n  /////////////////////////////////////////////////////\r\n  /////////////////////////////////////////////////////\r\n\r\n  const handleCloseModal = () => {\r\n    videoRef.current.play();\r\n    setShowModal(\"false\");\r\n    setCurrentWordIndex(0);\r\n    setCurrentExampleIndex(0);\r\n    setCurrentImageIndex(0);\r\n  };\r\n\r\n  const cueLogger = () => {\r\n    console.log(\r\n      \"Hi i'm from cuelogger\",\r\n      videoRef.current.textTracks[0].cues[1]\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    (function () {\r\n      // Obtain handles to main elements\r\n      const video = videoRef.current;\r\n      const track = trackRef.current;\r\n      let counter = 1;\r\n      const colorNumGenerator = () => {\r\n        counter++;\r\n        return (counter % 7) + 1;\r\n      };\r\n      track.addEventListener(\"cuechange\", (event) => {\r\n        // console.log(\"data\", data);\r\n        if (event.target.track?.activeCues[0]?.text) {\r\n          //////////////\r\n          const currentCueId = event.target.track?.activeCues[0]?.id;\r\n          const currentWords = data.filter(\r\n            (item) => item.subtitleWord[0].cueId === currentCueId\r\n          );\r\n          // I WANT TO AVOID SETTING AN EMPTY ARRAY AS \"currentDataSet\" , BECAUSE IN THAT CASE THERE WOULD BE NO WORDS TO DESTRUCTURE AND WE GET ERRORS:\r\n          if (currentWords.length > 0) setCurrentDataSet(currentWords);\r\n          const currentSubtitlePhrasedWords = currentWords.filter(\r\n            (item) => item.subtitleWord.length > 1\r\n          );\r\n          const currentSubtitlePhrasedWordsAndColors =\r\n            currentSubtitlePhrasedWords.map((word) => ({\r\n              word: word,\r\n              colorNumber: colorNumGenerator(),\r\n            }));\r\n\r\n          // console.log(\"current words\", currentWords);\r\n          /////////////\r\n          let text = event.target.track?.activeCues[0]?.text;\r\n          // Text with /n seperated from the words\r\n          text = text.replaceAll(\".\", \" .\").replaceAll(\"?\", \" ?\");\r\n          const lines = text.split(\"\\n\"); // Output example :  [\"How are you?\",\"I'm fine.\",\"Thank you.\"]\r\n          let words = lines.map((line) => line.split(\" \")); // Output example :  [[\"How\", \" are\",\" you? \"],[\"I'm\", \"fine.\",\"Thank\", \"you.\"]]\r\n          words = words.map((line) => line.map((word) => word.trim()));\r\n          // Now let's remove the possible whitespace from both ends of a word:\r\n          // Output example :  [[\"How\", \"are\",\"you?\"],[\"I'm\", \"fine.\",\"Thank\", \"you.\"]]\r\n          // const colors = [\"text-primary\", \"text-success\", \"text-danger\"];\r\n          const newRows = words.map((line) => (\r\n            <div className=\"d-flex justify-content-center\">\r\n              {line.map((word) => {\r\n                const dataItem = currentWords.find((item) =>\r\n                  item.subtitleWord.find(\r\n                    (subtitleItem) => subtitleItem.title === word\r\n                  )\r\n                );\r\n                let INDEX;\r\n                if (dataItem) {\r\n                  INDEX = currentWords.indexOf(dataItem);\r\n                }\r\n\r\n                if (dataItem && dataItem.subtitleWord.length > 1) {\r\n                  const phrasedSubWordAndColor =\r\n                    currentSubtitlePhrasedWordsAndColors.find(\r\n                      (item) => item.word === dataItem\r\n                    );\r\n                  const colorNum = phrasedSubWordAndColor.colorNumber;\r\n                  return (\r\n                    <button\r\n                      className={`subRow mx-2 color${colorNum}`}\r\n                      onClick={() =>\r\n                        wordClickHandler(\r\n                          process.env.REACT_APP_BACKEND_URL +\r\n                            `/images/${data[`${word}`]}.png`,\r\n                          INDEX\r\n                        )\r\n                      }\r\n                      // data-bs-toggle=\"modal\"\r\n                      // data-bs-target=\"#exampleModal\"\r\n                    >\r\n                      {word}\r\n                    </button>\r\n                  );\r\n                }\r\n                if (dataItem && dataItem.subtitleWord.length === 1) {\r\n                  // setPronunciationSrc(\r\n                  //   process.env.REACT_APP_BACKEND_URL +\r\n                  //     `/audios/${data[`${word}`]}_Am.mp3`\r\n                  // );\r\n                  return (\r\n                    <button\r\n                      className={`subRow mx-2 color${colorNumGenerator()}`}\r\n                      onClick={() =>\r\n                        wordClickHandler(\r\n                          process.env.REACT_APP_BACKEND_URL +\r\n                            `/images/${data[`${word}`]}.png`,\r\n                          INDEX\r\n                        )\r\n                      }\r\n                      // data-bs-toggle=\"modal\"\r\n                      // data-bs-target=\"#exampleModal\"\r\n                    >\r\n                      {word}\r\n                    </button>\r\n                  );\r\n                } else return <button className=\" subRow mx-2\">{word}</button>;\r\n              })}\r\n            </div>\r\n          ));\r\n          setRows(newRows);\r\n        } else setRows([]);\r\n      });\r\n\r\n      // Turn off all subtitles\r\n      for (var i = 0; i < video.textTracks.length; i++) {\r\n        video.textTracks[i].mode = \"hidden\";\r\n      }\r\n\r\n      //////////////////////////////////////////////////////////////\r\n      // Listen for fullscreen change events (from other controls, e.g. right clicking on the video itself)\r\n      document.addEventListener(\"fullscreenchange\", function (e) {\r\n        setFullscreenData(\r\n          !!(document.fullScreen || document.fullscreenElement)\r\n        );\r\n      });\r\n      document.addEventListener(\"webkitfullscreenchange\", function () {\r\n        setFullscreenData(!!document.webkitIsFullScreen);\r\n      });\r\n      document.addEventListener(\"mozfullscreenchange\", function () {\r\n        setFullscreenData(!!document.mozFullScreen);\r\n      });\r\n      document.addEventListener(\"msfullscreenchange\", function () {\r\n        setFullscreenData(!!document.msFullscreenElement);\r\n      });\r\n    })();\r\n  }, []);\r\n  ////////////// HLS.js player\r\n  // React.useEffect(() => {\r\n  //   (function () {\r\n  //     const videoElement = videoRef.current;\r\n\r\n  //     if (Hls.isSupported()) {\r\n  //       const hls = new Hls();\r\n  //       hls.loadSource(\r\n  //         process.env.REACT_APP_BACKEND_URL +\r\n  //           // `/courses-data/friends/section1/playlist/output_playlist.m3u8`\r\n  //           `/playlist/output_playlist.m3u8`\r\n  //       );\r\n  //       hls.attachMedia(videoElement);\r\n  //     } else if (videoElement.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n  //       videoElement.src =\r\n  //         process.env.REACT_APP_BACKEND_URL +\r\n  //         // `/courses-data/friends/section1/playlist/output_playlist.m3u8`;\r\n  //         `/playlist/output_playlist.m3u8`;\r\n  //     }\r\n  //   })();\r\n  // }, []);\r\n\r\n  ////////////////////////\r\n  //DESTRUCTURING THE CURRENT WORD DATA\r\n  // console.log(\r\n  //   \"data to destructure\",\r\n  //   currentDataSet[currentDataIndex]?.databaseWord[currentWordIndex]\r\n  // );\r\n  const {\r\n    word,\r\n    pronunciation,\r\n    frequency,\r\n    partOfSpeech,\r\n    register,\r\n    additionalInfo,\r\n    translation,\r\n    meaning,\r\n    images,\r\n  } = currentDataSet[currentDataIndex].databaseWord[currentWordIndex];\r\n  /////////////////////\r\n\r\n  const playPronunciation = (accent) => {\r\n    const audioName = `${word}_${accent}.mp3`;\r\n    setPronunciationSrc(\r\n      process.env.REACT_APP_BACKEND_URL + `/static-files/audios/${audioName}`\r\n    );\r\n  };\r\n\r\n  ///////////////\r\n  return (\r\n    <figure\r\n      id=\"vp-videoContainer\"\r\n      className=\" d-flex justify-content-center align-items-center \"\r\n      data-fullscreen=\"false\"\r\n      ref={videoContainerRef}\r\n    >\r\n      <div className=\" position-relative video-box d-flex flex-column bg-dark\">\r\n        <video\r\n          id=\"vp-video\"\r\n          className=\"vp-player p-0 m-0 mx-auto  \"\r\n          // controls\r\n          ref={videoRef}\r\n          preload=\"metadata\"\r\n          // crossOrigin=\"anonymous\"\r\n          onPlay={() => changeButtonState(\"playpause\")}\r\n          onPause={() => changeButtonState(\"playpause\")}\r\n          onTimeUpdate={handleProgressUpdate}\r\n          onLoadedMetadata={handleProgressMaxValue}\r\n        >\r\n          <source src={videoSrc} />\r\n          {/* PLEASE PAY ATTENTION THAT FOR THE EXPRESS.JS TO SERVE STATIC FILES, THE VIDEO OR SUBTITLE SRC MUST BE SOME THING LIKE THE STRING BELOW:\r\n          <source src=\"http://localhost:5000/api/static-files/courses-data/A/section_1/A1.mp4\" />\r\n\r\n          AS YOU SEE THE PART \"/api\" IS NEEDED AND THE \"epress.static\" METHOD SHOULD BE USED LIKE THIS:\r\n          app.use(\"/api/static-files\", express.static(\"static-files\"));\r\n         \r\n\r\n           */}\r\n\r\n          <track\r\n            label=\"English\"\r\n            kind=\"subtitles\"\r\n            srcLang=\"en\"\r\n            src={subtitleURL}\r\n            // src={process.env.REACT_APP_BACKEND_URL + \"/playlist/friends1.vtt\"}\r\n            default\r\n            id=\"vp-track\"\r\n            ref={trackRef}\r\n            onLoad={cueLogger}\r\n          />\r\n        </video>\r\n        <div className=\" subtitles w-100 position-absolute\">{rows}</div>\r\n        <div\r\n          id=\"vp-video-controls\"\r\n          className=\"vp-controls row bg-dark w-100   \"\r\n          data-state=\"visible\"\r\n          ref={videoControlsRef}\r\n        >\r\n          <progress\r\n            id=\"vp-progress\"\r\n            value=\"0\"\r\n            // min=\"0\"\r\n            max=\"100\"\r\n            ref={progressRef}\r\n            onClick={handleProgressClick}\r\n          ></progress>\r\n          <div className=\"vp-controls-buttons d-flex justify-content-around align-items-center\">\r\n            <button\r\n              id=\"vp-playpause\"\r\n              type=\"button\"\r\n              data-state=\"play\"\r\n              ref={playpauseRef}\r\n              onClick={handlePlayPause}\r\n            >\r\n              Play/Pause\r\n            </button>\r\n            <button\r\n              id=\"vp-stop\"\r\n              type=\"button\"\r\n              data-state=\"stop\"\r\n              ref={stopRef}\r\n              onClick={handleStop}\r\n            >\r\n              Stop\r\n            </button>\r\n            <button\r\n              id=\"vp-mute\"\r\n              type=\"button\"\r\n              data-state=\"mute\"\r\n              ref={muteRef}\r\n              onClick={handleMute}\r\n            >\r\n              Mute/Unmute\r\n            </button>\r\n            <input\r\n              id=\"vp-volume\"\r\n              type=\"range\"\r\n              ref={volumeRef}\r\n              onInput={handleVolumeChange}\r\n            />\r\n            <div className=\"middle-holder\"></div>\r\n\r\n            <button\r\n              id=\"vp-fs\"\r\n              type=\"button\"\r\n              data-state=\"go-fullscreen\"\r\n              ref={fullscreenRef}\r\n              onClick={handleFullscreen}\r\n            >\r\n              Fullscreen\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* AUDIO PLAYER: This audio player is not sth we see in the UI (pay attention to the hidden attribute assigned to it), it just plays the pronunciation audio in the background when needed. */}\r\n        {pronunciationSrc ? (\r\n          <audio\r\n            src={pronunciationSrc}\r\n            autoPlay\r\n            hidden\r\n            // play={pronunciationSrc}\r\n            onEnded={() => setPronunciationSrc(null)}\r\n          />\r\n        ) : null}\r\n\r\n        <div\r\n          className=\"modal\"\r\n          // onClick={handleCloseModal}\r\n          data-showModal={showModal}\r\n        >\r\n          <div className=\"main-data\">\r\n            <div className=\"main-nav\">\r\n              <div>\r\n                <button\r\n                  className=\"back\"\r\n                  onClick={() => {\r\n                    setCurrentWordIndex(currentWordIndex - 1);\r\n                  }}\r\n                  disabled={!activeWordsBackwardArrow}\r\n                  title=\"Back to previous highlighted word\"\r\n                ></button>\r\n\r\n                <button\r\n                  className=\"forward\"\r\n                  onClick={() => {\r\n                    setCurrentWordIndex(currentWordIndex + 1);\r\n                  }}\r\n                  disabled={!activeWordsForwardArrow}\r\n                  title=\"Forward to next highlighted word\"\r\n                ></button>\r\n              </div>\r\n              <button\r\n                className=\"close\"\r\n                onClick={handleCloseModal}\r\n                title=\"Close the modal\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"head\">\r\n              <h5 className=\"word\">{word}</h5>\r\n              <p>{pronunciation}</p>\r\n              <div className=\"pronunciation\">\r\n                <button\r\n                  onClick={() => playPronunciation(\"Br\")}\r\n                  className=\"Br\"\r\n                  title=\"Play British pronunciation\"\r\n                ></button>\r\n                <button\r\n                  onClick={() => playPronunciation(\"Am\")}\r\n                  className=\"Am\"\r\n                  title=\"Play American pronunciation\"\r\n                ></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"other-info\">\r\n              {partOfSpeech ? (\r\n                <p className=\"part-of-speech\">{partOfSpeech}</p>\r\n              ) : null}\r\n              {register ? <p className=\"register\">{register}</p> : null}\r\n              {frequency.written ? <p>{frequency.written}</p> : null}\r\n              {additionalInfo ? (\r\n                <p className=\"additional-info\">{additionalInfo}</p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <p className=\"definition\">\r\n              <span>{meaning.index === 0 ? \"\" : meaning.index + 1 + \") \"}</span>\r\n              {meaning.definition}\r\n            </p>\r\n            {showExamplesPart ? (\r\n              <div className=\"vp-examples\">\r\n                <div className=\"examples-nav\">\r\n                  <button\r\n                    className=\"previous\"\r\n                    onClick={() =>\r\n                      setCurrentExampleIndex(currentExampleIndex - 1)\r\n                    }\r\n                    disabled={!activeExamplesBackwardArrow}\r\n                    title=\"Back to previous example\"\r\n                  ></button>\r\n                  <h5> examples</h5>\r\n                  <button\r\n                    className=\"next\"\r\n                    onClick={() =>\r\n                      setCurrentExampleIndex(currentExampleIndex + 1)\r\n                    }\r\n                    disabled={!activeExamplesForwardArrow}\r\n                    title=\"Back to previous example\"\r\n                  ></button>\r\n                </div>\r\n\r\n                <p>{meaning.examples[currentExampleIndex]}</p>\r\n              </div>\r\n            ) : null}\r\n\r\n            {showImagesPart ? (\r\n              <div className=\"vp-images\">\r\n                <div className=\"images-nav\">\r\n                  <button\r\n                    className=\"previous\"\r\n                    onClick={() => setCurrentImageIndex(currentImageIndex - 1)}\r\n                    disabled={!activeImagesBackwardArrow}\r\n                    title=\"Back to previous image\"\r\n                  ></button>\r\n                  <h5> images</h5>\r\n                  <button\r\n                    className=\"next\"\r\n                    onClick={() => setCurrentImageIndex(currentImageIndex + 1)}\r\n                    disabled={!activeImagesForwardArrow}\r\n                    title=\"Forward to next image\"\r\n                  ></button>\r\n                </div>\r\n                <img\r\n                  src={\r\n                    process.env.REACT_APP_BACKEND_URL +\r\n                    `/static-files/images/${word}_${images[currentImageIndex]}.jpg`\r\n                  }\r\n                  // src={\r\n                  //   process.env.REACT_APP_BACKEND_URL +\r\n                  //   `/static-files/images/hump_1.jpg`\r\n                  // }\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\FileUpload.js",["418","419","420"],"import React, { Fragment, useState } from \"react\";\nimport Message from \"./Message\";\nimport Progress from \"./Progress\";\nimport axios from \"axios\";\n\nconst FileUpload = (props) => {\n  const [file, setFile] = useState(null);\n  ///////////\n  const [filename, setFilename] = useState(\"Choose File\");\n  const [message, setMessage] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = (e) => {\n    setFile(e.target.files[0]);\n\n    if (props.fileType === \"subtitle\") {\n      props.setUploadedFile(e.target.files[0]);\n      setFilename(e.target.files[0].name);\n      /////////////////////\n      if (props.setUploadedFileSrc) {\n        let reader = new FileReader();\n\n        reader.readAsDataURL(e.target.files[0]);\n\n        reader.onloadend = function () {\n          // imgavat.attr('src', reader.result);\n          props.setUploadedFileSrc(reader.result);\n        };\n      }\n    }\n\n    /////////////////////\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"courseName\", props.courseName);\n    formData.append(\"courseSection\", props.courseSection);\n    formData.append(\"fileType\", props.fileType);\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\n        process.env.REACT_APP_BACKEND_URL + \"/courses/new/section\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n          onUploadProgress: (progressEvent) => {\n            setUploadPercentage(\n              parseInt(\n                Math.round((progressEvent.loaded * 100) / progressEvent.total)\n              )\n            );\n          },\n        }\n      );\n\n      // const { fileName, filePath } = res.data;\n\n      // setUploadedFile({ fileName, filePath });\n\n      setMessage(\"File Uploaded\");\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage(\"There was a problem with the server\");\n      } else {\n        setMessage(err.response.data.msg);\n      }\n      setUploadPercentage(0);\n    }\n  };\n\n  return (\n    <div className=\"w-75 py-3 mx-auto d-flex flex-column justify-content-center\">\n      {message ? <Message msg={message} /> : null}\n      <form\n        onSubmit={onSubmit}\n        className=\" d-flex flex-column justify-content-center\"\n      >\n        <div className=\"custom-file mb-4\">\n          <input\n            type=\"file\"\n            className=\"custom-file-input\"\n            id=\"customFile\"\n            onChange={onChange}\n          />\n          {/* <label className=\"custom-file-label\" htmlFor=\"customFile\">\n            {filename}\n          </label> */}\n        </div>\n\n        <Progress percentage={uploadPercentage} />\n\n        <input\n          type=\"submit\"\n          value=\"Upload\"\n          className=\"btn btn-primary btn-block mt-4\"\n        />\n      </form>\n      {/* {uploadedFile ? (\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 m-auto\">\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\n          </div>\n        </div>\n      ) : null} */}\n    </div>\n  );\n};\n\nexport default FileUpload;\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\Message.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CourseNavbar.js",["421"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./CourseNavbar.css\";\r\nfunction CourseNavbar({\r\n  selectedTab,\r\n  setSelectedTab,\r\n  sectionsNumber,\r\n  addSection,\r\n}) {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const toggleMenuButton = () => setMenuOpen((menuOpen) => !menuOpen);\r\n  const handleTabSelect = (event) => setSelectedTab(event.target.id);\r\n\r\n  return (\r\n    <div className=\"course-navbar \">\r\n      <div className=\"header\">\r\n        <button className=\"menu-button\" onClick={toggleMenuButton}></button>\r\n        <h3> {selectedTab}</h3>\r\n      </div>\r\n      <div className={`tabs ${menuOpen ? \"\" : \"hidden\"} `}>\r\n        <button\r\n          onClick={handleTabSelect}\r\n          id=\"profile\"\r\n          className={`bg-primary  border-primary  ${\r\n            selectedTab === \"profile\" ? \"course-navbar-button-bolder\" : \"\"\r\n          }`}\r\n        >\r\n          profile\r\n        </button>\r\n\r\n        {Array.from({ length: sectionsNumber }, (v, i) => i + 1).map(\r\n          (sectionNum) => (\r\n            <button\r\n              onClick={handleTabSelect}\r\n              id={`section_${sectionNum}`}\r\n              className={`bg-danger border-danger ${\r\n                selectedTab === `section_${sectionNum}`\r\n                  ? \"course-navbar-button-bolder\"\r\n                  : \"\"\r\n              }`}\r\n              key={sectionNum}\r\n            >\r\n              {`section ${sectionNum}`}\r\n            </button>\r\n          )\r\n        )}\r\n        <button\r\n          onClick={addSection}\r\n          id=\"add_section\"\r\n          className=\"bg-warning  border-warning\"\r\n        >\r\n          add section\r\n        </button>\r\n        <button\r\n          onClick={handleTabSelect}\r\n          id=\"publish\"\r\n          className={`bg-success  border-success ${\r\n            selectedTab === \"publish\" ? \"course-navbar-button-bolder\" : \"\"\r\n          }`}\r\n        >\r\n          publish\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CourseNavbar;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CourseProfile.js",["422","423"],"import React, { useState } from \"react\";\r\nimport \"./CourseProfile.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction CourseProfile({\r\n  courseName,\r\n  setCourseName,\r\n  courseDescription,\r\n  setCourseDescription,\r\n}) {\r\n  const [image, setImage] = useState();\r\n\r\n  const handleNameChange = (event) => {\r\n    setCourseName(event.target.value);\r\n  };\r\n  const handleImageChange = (event) => {\r\n    setImage(event.target.files[0]);\r\n  };\r\n  const handleDescriptionChange = (event) => {\r\n    setCourseDescription(event.target.value);\r\n  };\r\n  // const handleFormSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"courseName\", name);\r\n  //   formData.append(\"image\", image);\r\n  //   formData.append(\"description\", description);\r\n  //   try {\r\n  //     const res = await axios.post(\r\n  //       process.env.REACT_APP_BACKEND_URL + \"/courses/new/profile\",\r\n  //       formData,\r\n  //       {\r\n  //         headers: {\r\n  //           \"Content-Type\": \"multipart/form-data\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //     props.setCourseData({\r\n  //       sections: { ...props.courseData.sections },\r\n  //       profile: { name: `${name}`, description: `${description}` },\r\n  //     });\r\n  //     setprofileSaved(true);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n  return (\r\n    <div className=\"course-profile-wrapper\">\r\n      <form className=\"course-profile\">\r\n        <label htmlFor=\"course-profile-name\">Course name </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"course-profile-name\"\r\n          name=\"course-profile-name\"\r\n          className=\"mb-4\"\r\n          value={courseName}\r\n          onChange={handleNameChange}\r\n        ></input>\r\n        <label htmlFor=\"course-profile-image\">Course profile image </label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"course-profile-image\"\r\n          name=\"course-profile-image\"\r\n          className=\"mb-4\"\r\n          onChange={handleImageChange}\r\n        ></input>\r\n        <label htmlFor=\"course-profile-description\">Course description </label>\r\n        <textarea\r\n          className=\"d-block mb-4\"\r\n          id=\"course-profile-description\"\r\n          name=\"course-profile-description\"\r\n          value={courseDescription}\r\n          onChange={handleDescriptionChange}\r\n        ></textarea>\r\n        {/* <button type=\"submit\" className=\"bg-warning\" onClick={handleFormSubmit}>\r\n          Save\r\n        </button> */}\r\n        {/* <div\r\n          className={\r\n            \"bg-success text-center \" + `${profileSaved ? \"\" : \"d-none\"}`\r\n          }\r\n        >\r\n          Successfully saved\r\n        </div> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default CourseProfile;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\CoursePublish.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\Test.js",["424"],"import React, { useState, useRef } from \"react\";\r\n\r\nfunction Test() {\r\n  const [x, setX] = useState(0);\r\n  const [buttons, setButtons] = useState([]);\r\n  // const xRef = useRef(x);\r\n  const adder = () => {\r\n    setX(x + 1);\r\n    console.log(\"real x\", x);\r\n  };\r\n\r\n  const logger = () => {\r\n    console.log(\"fake x \", x);\r\n  };\r\n  const addButton = () =>\r\n    setButtons([...buttons, <button onClick={logger}>mo</button>]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={adder}>add</button>\r\n      <button onClick={logger}>mo</button>\r\n      <button onClick={logger}>mo</button>\r\n      <button onClick={logger}>mo</button>\r\n\r\n      {buttons}\r\n      <button onClick={addButton}> add but</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\word-creation\\AudioStoring.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\word-creation\\ImageStoring.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\shared\\components\\UIElements\\RBtest.js",["425","426","427"],"import React, { useState, useRef } from \"react\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport Fuse from \"fuse.js\";\r\nimport { matchSorter } from \"match-sorter\";\r\n\r\n// import \"./AutoCompleteSearch.css\";\r\n\r\nfunction RBAutoCompleteSearch(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const ref = useRef();\r\n  const dummyItems = [\r\n    {\r\n      title: \"a\",\r\n    },\r\n    { title: \"b\" },\r\n    {\r\n      title: \"c\",\r\n    },\r\n    {\r\n      title: \"d\",\r\n    },\r\n    {\r\n      title: \"e\",\r\n    },\r\n    {\r\n      title: \"f\",\r\n    },\r\n  ];\r\n  React.useEffect(() => {\r\n    (function () {\r\n      let activeElIndex = 0;\r\n      const children = ref.current.children;\r\n      ref.current.addEventListener(\"keydown\", (event) => {\r\n        // const activeElement = document.activeElement;\r\n        if (event.key === \"ArrowUp\") {\r\n          if (activeElIndex > 0) {\r\n            activeElIndex--;\r\n            if (activeElIndex > 0) {\r\n              children[1].children[activeElIndex - 1].focus();\r\n            } else children[0].focus();\r\n          }\r\n        }\r\n        if (event.key === \"ArrowDown\") {\r\n          activeElIndex++;\r\n\r\n          if (activeElIndex < children[1].children.length + 1)\r\n            children[1].children[activeElIndex - 1].focus();\r\n          else activeElIndex--;\r\n        }\r\n      });\r\n    })();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    (function () {\r\n      setValue(\"\");\r\n    })();\r\n  }, []);\r\n\r\n  // React.useEffect(() => {\r\n  //   (function () {\r\n  //     if (props.closeSuggestionBox === true) setRows([]);\r\n  //   })();\r\n  // }, [props.closeSuggestionBox]);\r\n\r\n  const onChange = (event) => {\r\n    // props.setCloseSuggestionBox(false);\r\n    let newValue = event.target.value;\r\n    setValue(newValue);\r\n    let searchSuggestions;\r\n    if (newValue) {\r\n      searchSuggestions = matchSorter(dummyItems, newValue, {\r\n        keys: [\"title\"],\r\n      });\r\n    } else searchSuggestions = [];\r\n\r\n    const newRows = searchSuggestions.map((item) => (\r\n      <button\r\n        className=\" border rounded-0 auto-b\"\r\n        onClick={selectSuggetionHandler}\r\n      >\r\n        {item.title}\r\n      </button>\r\n    ));\r\n    setRows(newRows);\r\n  };\r\n  const selectSuggetionHandler = (event) => {\r\n    // props.handleWordChange(event.target.textContent);\r\n    setValue(\"\");\r\n    setSelectedItems([...selectedItems, event.target.textContent]);\r\n    setRows([]);\r\n  };\r\n  const selectedItemsElements = selectedItems.map((selectedItem) => (\r\n    <div>{selectedItem}</div>\r\n  ));\r\n\r\n  return (\r\n    <div ref={ref} className=\"auto-wrapper\">\r\n      <div className=\"d-flex w-100 \">\r\n        {selectedItemsElements}\r\n        <input\r\n          value={value}\r\n          type=\"search\"\r\n          onChange={onChange}\r\n          className=\"auto-input\"\r\n          placeholder={\r\n            props.type ? \"Search in subtitle\" : \"Search in data-base\"\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"list-group auto-ul-wrapper\">{rows}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default RBAutoCompleteSearch;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordAutoCompleteSearch.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-creation\\WordSearchInput.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\WordReview.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\Carousel.js",["428"],"import React, { useState } from \"react\";\r\nimport \"./Carousel.css\";\r\nimport gotta from \"./images/gotta.png\";\r\nimport aura from \"./images/aura.png\";\r\nimport cleanse from \"./images/cleanse.png\";\r\n\r\nconst dummyImages = [gotta, aura, cleanse];\r\nconst Carousel = ({ handleCloseCarousel, setPlayingPronunciation }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) =>\r\n      prevIndex === 0 ? dummyImages.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) =>\r\n      prevIndex === dummyImages.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      <div className=\"carousel-top\">\r\n        <div\r\n          className=\"bg-primary\"\r\n          onClick={() => {\r\n            // setPronunciationSrc(pronunciationSrc + \"_Am.mp3\")\r\n            setPlayingPronunciation(true);\r\n          }}\r\n        >\r\n          <span className=\"carousel-top-icon vp-AmP\"></span> <span>Am</span>\r\n        </div>\r\n        <div\r\n          className=\"bg-warning \"\r\n          onClick={() => {\r\n            // setPronunciationSrc(pronunciationSrc + \"_Am.mp3\")\r\n            setPlayingPronunciation(true);\r\n          }}\r\n        >\r\n          <span className=\"carousel-top-icon vp-BrP\"></span> <span>Br</span>\r\n        </div>\r\n\r\n        <div className=\"bg-danger \" onClick={handleCloseCarousel}>\r\n          <span className=\"carousel-top-icon vp-modal-close \"></span>\r\n          <span>Close</span>\r\n        </div>\r\n      </div>\r\n      <img src={dummyImages[currentIndex]} />\r\n      <p> ترجمه فارسی</p>\r\n      <p> ترجمه فارسی</p>\r\n      <button className=\"carousel-btn-prev\" onClick={prevSlide}></button>\r\n      <button className=\"carousel-btn-next\" onClick={nextSlide}></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\WordCreation.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\Meanings.js",["429"],"import React, { useState } from \"react\";\r\nimport \"./Meanings.css\";\r\nimport Meaning from \"./Meaning\";\r\nfunction Meanings({ meanings, setMeanings }) {\r\n  return (\r\n    <div className=\"meanings\">\r\n      {meanings.map((meaning, index) => (\r\n        <div>\r\n          <Meaning\r\n            meaning={meaning}\r\n            setMeaning={(newMeaning) => {\r\n              let meaningsCopy = [...meanings];\r\n              meaningsCopy[index] = newMeaning;\r\n              setMeanings(meaningsCopy);\r\n            }}\r\n            onRemoveMeaning={() =>\r\n              setMeanings(meanings.filter((_, i) => i !== index))\r\n            }\r\n          />\r\n        </div>\r\n      ))}\r\n      <button\r\n        className=\"add\"\r\n        onClick={() =>\r\n          setMeanings([\r\n            ...meanings,\r\n            {\r\n              index: \"\",\r\n              definition: \"\",\r\n              examples: [],\r\n            },\r\n          ])\r\n        }\r\n      >\r\n        add meaning\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Meanings;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\Meaning.js",["430"],"import React, { useState } from \"react\";\r\nimport \"./Meaning.css\";\r\nimport Examples from \"./Examples\";\r\nfunction Meaning({ meaning, setMeaning, onRemoveMeaning }) {\r\n  return (\r\n    <div className=\"meaning\">\r\n      <div className=\"index-definition\">\r\n        <input\r\n          className=\"index\"\r\n          placeholder=\"ind\"\r\n          value={meaning.index}\r\n          onChange={(event) =>\r\n            setMeaning({ ...meaning, index: event.target.value })\r\n          }\r\n        ></input>\r\n        <textarea\r\n          placeholder=\"definition\"\r\n          value={meaning.definition}\r\n          onChange={(event) =>\r\n            setMeaning({ ...meaning, definition: event.target.value })\r\n          }\r\n        ></textarea>\r\n      </div>\r\n\r\n      <button className=\"remove\" onClick={onRemoveMeaning}>\r\n        ❌\r\n      </button>\r\n      <Examples\r\n        examples={meaning.examples}\r\n        setExamples={(newExamples) =>\r\n          setMeaning({ ...meaning, examples: newExamples })\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Meaning;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\word-creation\\Examples.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\SectionView.js",["431","432","433"],"import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport \"./SectionView.css\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nfunction SectionView() {\r\n  ////////////////\r\n  //THESE DATA SHOULD BE RECIEVED FROM PARENT\r\n  // const courseName = \"A\"\r\n\r\n  const { courseId, sectionNumber } = useParams();\r\n  console.log(\"course id\", courseId, \"sectionnumber\", sectionNumber);\r\n\r\n  ///////////////////\r\n  const [courseData, setCourseData] = useState(\"placeholder\");\r\n  const [courseImages, setCourseImages] = useState();\r\n  const [subtitleURL, setSubtitleURL] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  // let images = [];\r\n\r\n  ///////////////////////////////\r\n  React.useEffect(() => {\r\n    (function () {\r\n      // FETCHING COURSE DATA AND SECTION SUBTITLE\r\n      const courseDataRetreive = async () => {\r\n        try {\r\n          const retrievedcourseData = await fetch(\r\n            process.env.REACT_APP_BACKEND_URL + `/courses/${courseId}`\r\n          );\r\n          const data = await retrievedcourseData.json();\r\n          // console.log(\"course data\", data);\r\n          setCourseData(data);\r\n          const courseName = data.profile.name;\r\n          const subtitleName = `${courseName}${sectionNumber}.vtt`;\r\n\r\n          //FETCHING SUBITILE\r\n          const retrievedSubtitle = await fetch(\r\n            process.env.REACT_APP_BACKEND_URL +\r\n              `/static-files/courses-data/${courseName}/section_${sectionNumber}/${subtitleName}`\r\n          );\r\n          let blob = await retrievedSubtitle.blob();\r\n          let url = await window.URL.createObjectURL(blob);\r\n\r\n          setSubtitleURL(url);\r\n          setIsLoading(false);\r\n        } catch (err) {\r\n          console.log(\"sth wrong happened with loading section data\", err);\r\n        }\r\n      };\r\n      courseDataRetreive();\r\n    })();\r\n  }, []);\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  // React.useEffect(() => {\r\n  //   (function () {\r\n  //     const courseDataRetreive = async () => {\r\n  //       try {\r\n  //         const retrievedCourseData = await sendRequest(\r\n  //           process.env.REACT_APP_BACKEND_URL + `/courses/data/${courseId}`\r\n  //         );\r\n  //         // for (const wordPair of retrievedCourseData) {\r\n  //         //   let image = await sendRequest(\r\n  //         //     process.env.REACT_APP_BACKEND_URL +\r\n  //         //       `/images/${wordPair.databaseWord}`\r\n  //         //   );\r\n  //         //   console.log(image);\r\n  //         // }\r\n\r\n  //         setCourseData(retrievedCourseData);\r\n  //       } catch (err) {\r\n  //         console.log(\"sth wrong happened\");\r\n  //       }\r\n  //     };\r\n  //     courseDataRetreive();\r\n  //   })();\r\n  // }, []);\r\n  // React.useEffect(() => {\r\n  //   (function () {})();\r\n  // }, [data]);\r\n  // console.log(\"im sub\", subtitle);\r\n\r\n  ///////////////////////////////////////\r\n  // if (courseData && subtitleURL) {\r\n  //   // courseData.course.content.forEach((element) => {\r\n  //   //   data[`${element.subtitleWord}`] = element.databaseWord;\r\n  //   // });\r\n  // }\r\n  //////////////////////////\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <VideoPlayer\r\n          data={courseData.sections[sectionNumber - 1].words}\r\n          subtitleURL={subtitleURL}\r\n          videoSrc={\r\n            process.env.REACT_APP_BACKEND_URL +\r\n            `/static-files/courses-data/${courseData.profile.name}/section_${sectionNumber}/${courseData.profile.name}${sectionNumber}.mp4`\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default SectionView;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\LoadingSpinner.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\Courses.js",[],"C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\CourseView.js",["434"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport \"./CourseView.css\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport SectionItem from \"./SectionItem\";\r\n\r\nconst CourseView = (props) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [course, setCourse] = useState({});\r\n\r\n  //////////////\r\n  const courseId = useParams().courseId;\r\n\r\n  /////////////\r\n  useEffect(() => {\r\n    (function () {\r\n      const sectionsRetreive = async () => {\r\n        try {\r\n          const retrievedCourse = await fetch(\r\n            process.env.REACT_APP_BACKEND_URL + `/courses/${courseId}`\r\n          );\r\n          const course = await retrievedCourse.json();\r\n          setCourse(course);\r\n          setIsLoading(false);\r\n        } catch (err) {\r\n          console.log(\"sth wrong happened\", err);\r\n        }\r\n      };\r\n      sectionsRetreive();\r\n    })();\r\n  }, []);\r\n\r\n  if (!isLoading && course.sections.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <h2>No sections found. Maybe create one?</h2>\r\n        <button to=\"/sections/new\">Share Course</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"course-view\">\r\n      {isLoading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <div className=\"sections-list\">\r\n          {Array.from({ length: course.sections.length }, (v, i) => i + 1).map(\r\n            (item) => (\r\n              <SectionItem\r\n                sectionNumber={item}\r\n                key={`${courseId}${item}`}\r\n                name={course.profile.name}\r\n                description={`section${item}`}\r\n                imgSrc={\r\n                  process.env.REACT_APP_BACKEND_URL +\r\n                  `/static-files/profile-images/courses/${course.profile.name}.jpg`\r\n                }\r\n                courseId={courseId}\r\n              />\r\n            )\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseView;\r\n","C:\\Users\\Fardin\\Desktop\\test_projects\\front-end\\src\\courses\\course-view\\SectionItem.js",["435"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SectionItem.css\";\r\nfunction SectionItem({ name, imgSrc, description, sectionNumber, courseId }) {\r\n  return (\r\n    <Link\r\n      className=\"section-item\"\r\n      as={Link}\r\n      to={`/sections/view/${courseId}/${sectionNumber}`}\r\n    >\r\n      <img src={imgSrc} />\r\n      <h3>{name}</h3>\r\n      <p>{description}</p>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default SectionItem;\r\n",{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","replacedBy":"439"},{"ruleId":"440","severity":1,"message":"441","line":1,"column":27,"nodeType":"442","messageId":"443","endLine":1,"endColumn":33},{"ruleId":"440","severity":1,"message":"444","line":17,"column":8,"nodeType":"442","messageId":"443","endLine":17,"endColumn":16},{"ruleId":"440","severity":1,"message":"445","line":22,"column":8,"nodeType":"442","messageId":"443","endLine":22,"endColumn":26},{"ruleId":"440","severity":1,"message":"446","line":23,"column":8,"nodeType":"442","messageId":"443","endLine":23,"endColumn":21},{"ruleId":"440","severity":1,"message":"447","line":24,"column":8,"nodeType":"442","messageId":"443","endLine":24,"endColumn":28},{"ruleId":"440","severity":1,"message":"448","line":29,"column":8,"nodeType":"442","messageId":"443","endLine":29,"endColumn":12},{"ruleId":"440","severity":1,"message":"449","line":32,"column":8,"nodeType":"442","messageId":"443","endLine":32,"endColumn":19},{"ruleId":"440","severity":1,"message":"450","line":33,"column":8,"nodeType":"442","messageId":"443","endLine":33,"endColumn":14},{"ruleId":"440","severity":1,"message":"451","line":34,"column":8,"nodeType":"442","messageId":"443","endLine":34,"endColumn":30},{"ruleId":"440","severity":1,"message":"452","line":35,"column":8,"nodeType":"442","messageId":"443","endLine":35,"endColumn":17},{"ruleId":"440","severity":1,"message":"453","line":36,"column":8,"nodeType":"442","messageId":"443","endLine":36,"endColumn":18},{"ruleId":"440","severity":1,"message":"454","line":37,"column":8,"nodeType":"442","messageId":"443","endLine":37,"endColumn":16},{"ruleId":"440","severity":1,"message":"455","line":38,"column":8,"nodeType":"442","messageId":"443","endLine":38,"endColumn":20},{"ruleId":"440","severity":1,"message":"456","line":40,"column":3,"nodeType":"442","messageId":"443","endLine":40,"endColumn":12},{"ruleId":"440","severity":1,"message":"457","line":41,"column":3,"nodeType":"442","messageId":"443","endLine":41,"endColumn":15},{"ruleId":"440","severity":1,"message":"458","line":42,"column":3,"nodeType":"442","messageId":"443","endLine":42,"endColumn":13},{"ruleId":"440","severity":1,"message":"459","line":43,"column":3,"nodeType":"442","messageId":"443","endLine":43,"endColumn":15},{"ruleId":"440","severity":1,"message":"460","line":44,"column":3,"nodeType":"442","messageId":"443","endLine":44,"endColumn":13},{"ruleId":"440","severity":1,"message":"461","line":45,"column":3,"nodeType":"442","messageId":"443","endLine":45,"endColumn":13},{"ruleId":"440","severity":1,"message":"462","line":46,"column":3,"nodeType":"442","messageId":"443","endLine":46,"endColumn":14},{"ruleId":"440","severity":1,"message":"463","line":47,"column":3,"nodeType":"442","messageId":"443","endLine":47,"endColumn":12},{"ruleId":"440","severity":1,"message":"464","line":48,"column":3,"nodeType":"442","messageId":"443","endLine":48,"endColumn":20},{"ruleId":"440","severity":1,"message":"465","line":49,"column":3,"nodeType":"442","messageId":"443","endLine":49,"endColumn":15},{"ruleId":"440","severity":1,"message":"466","line":50,"column":3,"nodeType":"442","messageId":"443","endLine":50,"endColumn":14},{"ruleId":"440","severity":1,"message":"467","line":51,"column":3,"nodeType":"442","messageId":"443","endLine":51,"endColumn":13},{"ruleId":"440","severity":1,"message":"468","line":52,"column":3,"nodeType":"442","messageId":"443","endLine":52,"endColumn":18},{"ruleId":"440","severity":1,"message":"469","line":54,"column":8,"nodeType":"442","messageId":"443","endLine":54,"endColumn":22},{"ruleId":"440","severity":1,"message":"470","line":58,"column":11,"nodeType":"442","messageId":"443","endLine":58,"endColumn":20},{"ruleId":"440","severity":1,"message":"471","line":58,"column":22,"nodeType":"442","messageId":"443","endLine":58,"endColumn":27},{"ruleId":"440","severity":1,"message":"472","line":58,"column":29,"nodeType":"442","messageId":"443","endLine":58,"endColumn":40},{"ruleId":"440","severity":1,"message":"473","line":58,"column":42,"nodeType":"442","messageId":"443","endLine":58,"endColumn":52},{"ruleId":"440","severity":1,"message":"474","line":98,"column":9,"nodeType":"442","messageId":"443","endLine":98,"endColumn":15},{"ruleId":"440","severity":1,"message":"475","line":6641,"column":9,"nodeType":"442","messageId":"443","endLine":6641,"endColumn":10},{"ruleId":"440","severity":1,"message":"476","line":3,"column":20,"nodeType":"442","messageId":"443","endLine":3,"endColumn":26},{"ruleId":"440","severity":1,"message":"477","line":4,"column":3,"nodeType":"442","messageId":"443","endLine":4,"endColumn":8},{"ruleId":"440","severity":1,"message":"478","line":5,"column":3,"nodeType":"442","messageId":"443","endLine":5,"endColumn":11},{"ruleId":"440","severity":1,"message":"479","line":6,"column":3,"nodeType":"442","messageId":"443","endLine":6,"endColumn":9},{"ruleId":"480","severity":1,"message":"481","line":23,"column":15,"nodeType":"482","endLine":23,"endColumn":52},{"ruleId":"480","severity":1,"message":"481","line":99,"column":15,"nodeType":"482","endLine":99,"endColumn":52},{"ruleId":"436","replacedBy":"483"},{"ruleId":"438","replacedBy":"484"},{"ruleId":"440","severity":1,"message":"485","line":1,"column":17,"nodeType":"442","messageId":"443","endLine":1,"endColumn":25},{"ruleId":"440","severity":1,"message":"486","line":14,"column":10,"nodeType":"442","messageId":"443","endLine":14,"endColumn":23},{"ruleId":"487","severity":1,"message":"488","line":26,"column":5,"nodeType":"489","messageId":"490","endLine":26,"endColumn":9},{"ruleId":"440","severity":1,"message":"491","line":5,"column":8,"nodeType":"442","messageId":"443","endLine":5,"endColumn":14},{"ruleId":"440","severity":1,"message":"492","line":8,"column":10,"nodeType":"442","messageId":"443","endLine":8,"endColumn":16},{"ruleId":"440","severity":1,"message":"493","line":4,"column":8,"nodeType":"442","messageId":"443","endLine":4,"endColumn":12},{"ruleId":"440","severity":1,"message":"494","line":9,"column":8,"nodeType":"442","messageId":"443","endLine":9,"endColumn":12},{"ruleId":"440","severity":1,"message":"491","line":10,"column":8,"nodeType":"442","messageId":"443","endLine":10,"endColumn":14},{"ruleId":"440","severity":1,"message":"495","line":63,"column":13,"nodeType":"442","messageId":"443","endLine":63,"endColumn":31},{"ruleId":"440","severity":1,"message":"496","line":1,"column":17,"nodeType":"442","messageId":"443","endLine":1,"endColumn":26},{"ruleId":"436","replacedBy":"497"},{"ruleId":"438","replacedBy":"498"},{"ruleId":"440","severity":1,"message":"499","line":64,"column":9,"nodeType":"442","messageId":"443","endLine":64,"endColumn":13},{"ruleId":"480","severity":1,"message":"481","line":9,"column":11,"nodeType":"482","endLine":9,"endColumn":68},{"ruleId":"480","severity":1,"message":"481","line":14,"column":11,"nodeType":"482","endLine":14,"endColumn":67},{"ruleId":"480","severity":1,"message":"481","line":19,"column":11,"nodeType":"482","endLine":19,"endColumn":67},{"ruleId":"480","severity":1,"message":"481","line":24,"column":11,"nodeType":"482","endLine":24,"endColumn":67},{"ruleId":"480","severity":1,"message":"481","line":29,"column":11,"nodeType":"482","endLine":29,"endColumn":67},{"ruleId":"480","severity":1,"message":"481","line":34,"column":11,"nodeType":"482","endLine":34,"endColumn":67},{"ruleId":"480","severity":1,"message":"481","line":39,"column":11,"nodeType":"482","endLine":39,"endColumn":67},{"ruleId":"500","severity":1,"message":"501","line":47,"column":9,"nodeType":"482","messageId":"502","endLine":51,"endColumn":10,"fix":"503"},{"ruleId":"440","severity":1,"message":"504","line":2,"column":8,"nodeType":"442","messageId":"443","endLine":2,"endColumn":16},{"ruleId":"440","severity":1,"message":"505","line":5,"column":8,"nodeType":"442","messageId":"443","endLine":5,"endColumn":16},{"ruleId":"440","severity":1,"message":"470","line":23,"column":11,"nodeType":"442","messageId":"443","endLine":23,"endColumn":20},{"ruleId":"440","severity":1,"message":"471","line":23,"column":22,"nodeType":"442","messageId":"443","endLine":23,"endColumn":27},{"ruleId":"440","severity":1,"message":"473","line":23,"column":42,"nodeType":"442","messageId":"443","endLine":23,"endColumn":52},{"ruleId":"506","severity":1,"message":"507","line":111,"column":6,"nodeType":"508","endLine":111,"endColumn":8,"suggestions":"509"},{"ruleId":"440","severity":1,"message":"510","line":3,"column":24,"nodeType":"442","messageId":"443","endLine":3,"endColumn":33},{"ruleId":"440","severity":1,"message":"510","line":3,"column":24,"nodeType":"442","messageId":"443","endLine":3,"endColumn":33},{"ruleId":"440","severity":1,"message":"511","line":9,"column":10,"nodeType":"442","messageId":"443","endLine":9,"endColumn":22},{"ruleId":"440","severity":1,"message":"512","line":10,"column":8,"nodeType":"442","messageId":"443","endLine":10,"endColumn":17},{"ruleId":"440","severity":1,"message":"513","line":14,"column":8,"nodeType":"442","messageId":"443","endLine":14,"endColumn":16},{"ruleId":"440","severity":1,"message":"514","line":19,"column":10,"nodeType":"442","messageId":"443","endLine":19,"endColumn":18},{"ruleId":"440","severity":1,"message":"515","line":20,"column":10,"nodeType":"442","messageId":"443","endLine":20,"endColumn":15},{"ruleId":"440","severity":1,"message":"499","line":24,"column":9,"nodeType":"442","messageId":"443","endLine":24,"endColumn":13},{"ruleId":"440","severity":1,"message":"516","line":187,"column":9,"nodeType":"442","messageId":"443","endLine":187,"endColumn":16},{"ruleId":"506","severity":1,"message":"507","line":225,"column":6,"nodeType":"508","endLine":225,"endColumn":8,"suggestions":"517"},{"ruleId":"518","severity":1,"message":"519","line":263,"column":35,"nodeType":"520","messageId":"521","endLine":270,"endColumn":12},{"ruleId":"440","severity":1,"message":"522","line":314,"column":9,"nodeType":"442","messageId":"443","endLine":314,"endColumn":16},{"ruleId":"440","severity":1,"message":"523","line":335,"column":13,"nodeType":"442","messageId":"443","endLine":335,"endColumn":25},{"ruleId":"440","severity":1,"message":"510","line":3,"column":24,"nodeType":"442","messageId":"443","endLine":3,"endColumn":33},{"ruleId":"518","severity":1,"message":"519","line":67,"column":37,"nodeType":"520","messageId":"521","endLine":74,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":7,"column":7,"nodeType":"482","endLine":7,"endColumn":27},{"ruleId":"440","severity":1,"message":"526","line":2,"column":8,"nodeType":"442","messageId":"443","endLine":2,"endColumn":12},{"ruleId":"440","severity":1,"message":"491","line":3,"column":8,"nodeType":"442","messageId":"443","endLine":3,"endColumn":14},{"ruleId":"440","severity":1,"message":"486","line":4,"column":10,"nodeType":"442","messageId":"443","endLine":4,"endColumn":23},{"ruleId":"440","severity":1,"message":"485","line":1,"column":17,"nodeType":"442","messageId":"443","endLine":1,"endColumn":25},{"ruleId":"440","severity":1,"message":"526","line":2,"column":8,"nodeType":"442","messageId":"443","endLine":2,"endColumn":12},{"ruleId":"440","severity":1,"message":"454","line":3,"column":8,"nodeType":"442","messageId":"443","endLine":3,"endColumn":16},{"ruleId":"440","severity":1,"message":"527","line":4,"column":8,"nodeType":"442","messageId":"443","endLine":4,"endColumn":11},{"ruleId":"440","severity":1,"message":"528","line":5,"column":10,"nodeType":"442","messageId":"443","endLine":5,"endColumn":20},{"ruleId":"440","severity":1,"message":"529","line":12,"column":10,"nodeType":"442","messageId":"443","endLine":12,"endColumn":18},{"ruleId":"440","severity":1,"message":"530","line":12,"column":20,"nodeType":"442","messageId":"443","endLine":12,"endColumn":31},{"ruleId":"440","severity":1,"message":"531","line":27,"column":9,"nodeType":"442","messageId":"443","endLine":27,"endColumn":17},{"ruleId":"532","severity":1,"message":"533","line":174,"column":14,"nodeType":"534","messageId":"490","endLine":174,"endColumn":16},{"ruleId":"532","severity":1,"message":"533","line":182,"column":19,"nodeType":"534","messageId":"490","endLine":182,"endColumn":21},{"ruleId":"506","severity":1,"message":"535","line":394,"column":6,"nodeType":"508","endLine":394,"endColumn":8,"suggestions":"536"},{"ruleId":"440","severity":1,"message":"537","line":430,"column":5,"nodeType":"442","messageId":"443","endLine":430,"endColumn":16},{"ruleId":"524","severity":1,"message":"525","line":665,"column":17,"nodeType":"482","endLine":674,"endColumn":19},{"ruleId":"440","severity":1,"message":"538","line":1,"column":17,"nodeType":"442","messageId":"443","endLine":1,"endColumn":25},{"ruleId":"440","severity":1,"message":"539","line":9,"column":10,"nodeType":"442","messageId":"443","endLine":9,"endColumn":18},{"ruleId":"440","severity":1,"message":"540","line":44,"column":13,"nodeType":"442","messageId":"443","endLine":44,"endColumn":16},{"ruleId":"440","severity":1,"message":"496","line":1,"column":27,"nodeType":"442","messageId":"443","endLine":1,"endColumn":36},{"ruleId":"440","severity":1,"message":"541","line":3,"column":8,"nodeType":"442","messageId":"443","endLine":3,"endColumn":13},{"ruleId":"440","severity":1,"message":"542","line":11,"column":10,"nodeType":"442","messageId":"443","endLine":11,"endColumn":15},{"ruleId":"440","severity":1,"message":"441","line":1,"column":27,"nodeType":"442","messageId":"443","endLine":1,"endColumn":33},{"ruleId":"440","severity":1,"message":"543","line":2,"column":8,"nodeType":"442","messageId":"443","endLine":2,"endColumn":22},{"ruleId":"440","severity":1,"message":"544","line":3,"column":8,"nodeType":"442","messageId":"443","endLine":3,"endColumn":15},{"ruleId":"440","severity":1,"message":"493","line":4,"column":8,"nodeType":"442","messageId":"443","endLine":4,"endColumn":12},{"ruleId":"524","severity":1,"message":"525","line":50,"column":7,"nodeType":"482","endLine":50,"endColumn":46},{"ruleId":"440","severity":1,"message":"485","line":1,"column":17,"nodeType":"442","messageId":"443","endLine":1,"endColumn":25},{"ruleId":"440","severity":1,"message":"485","line":1,"column":17,"nodeType":"442","messageId":"443","endLine":1,"endColumn":25},{"ruleId":"440","severity":1,"message":"545","line":16,"column":10,"nodeType":"442","messageId":"443","endLine":16,"endColumn":22},{"ruleId":"440","severity":1,"message":"546","line":16,"column":24,"nodeType":"442","messageId":"443","endLine":16,"endColumn":39},{"ruleId":"506","severity":1,"message":"547","line":52,"column":6,"nodeType":"508","endLine":52,"endColumn":8,"suggestions":"548"},{"ruleId":"506","severity":1,"message":"549","line":32,"column":6,"nodeType":"508","endLine":32,"endColumn":8,"suggestions":"550"},{"ruleId":"524","severity":1,"message":"525","line":11,"column":7,"nodeType":"482","endLine":11,"endColumn":27},"no-native-reassign",["551"],"no-negated-in-lhs",["552"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'NewPlace' is defined but never used.","'AutoCompleteSearch' is defined but never used.","'CourseSection' is defined but never used.","'RBAutoCompleteSearch' is defined but never used.","'Test' is defined but never used.","'VideoPlayer' is defined but never used.","'RBtest' is defined but never used.","'WordAutoCompleteSearch' is defined but never used.","'WordsPart' is defined but never used.","'WordReview' is defined but never used.","'Carousel' is defined but never used.","'WordCreation' is defined but never used.","'BarLoader' is defined but never used.","'CircleLoader' is defined but never used.","'ClipLoader' is defined but never used.","'BounceLoader' is defined but never used.","'RingLoader' is defined but never used.","'BeatLoader' is defined but never used.","'ClockLoader' is defined but never used.","'DotLoader' is defined but never used.","'ClimbingBoxLoader' is defined but never used.","'RotateLoader' is defined but never used.","'ScaleLoader' is defined but never used.","'SyncLoader' is defined but never used.","'PropagateLoader' is defined but never used.","'LoadingSpinner' is defined but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'clearError' is assigned a value but never used.","'slides' is assigned a value but never used.","'x' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["551"],["552"],"'useState' is defined but never used.","'useHttpClient' is defined but never used.","no-dupe-keys","Duplicate key 'turn'.","ObjectExpression","unexpected","'Button' is defined but never used.","'height' is defined but never used.","'Fuse' is defined but never used.","'Card' is defined but never used.","'signUpResponseData' is assigned a value but never used.","'useEffect' is defined but never used.",["551"],["552"],"'list' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"553","text":"554"},"'ReactDOM' is defined but never used.","'Backdrop' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.","ArrayExpression",["555"],"'useFormik' is defined but never used.","'ErrorMessage' is defined but never used.","'TextError' is defined but never used.","'WordItem' is defined but never used.","'database' is assigned a value but never used.","'words' is assigned a value but never used.","'options' is assigned a value but never used.",["556"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'wordId', 'wordId'.","ArrowFunctionExpression","unsafeRefs","'history' is assigned a value but never used.","'responseData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Form' is defined but never used.","'Hls' is defined but never used.","'fabClasses' is defined but never used.","'imageSrc' is assigned a value but never used.","'setImageSrc' is assigned a value but never used.","'imageRef' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook React.useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["557"],"'translation' is assigned a value but never used.","'Fragment' is defined but never used.","'filename' is assigned a value but never used.","'res' is assigned a value but never used.","'axios' is defined but never used.","'image' is assigned a value but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'courseImages' is assigned a value but never used.","'setCourseImages' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'courseId' and 'sectionNumber'. Either include them or remove the dependency array.",["558"],"React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["559"],"no-global-assign","no-unsafe-negation",[1938,1938]," rel=\"noreferrer\"",{"desc":"560","fix":"561"},{"desc":"560","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},"Update the dependencies array to be: [sendRequest]",{"range":"569","text":"570"},{"range":"571","text":"570"},"Update the dependencies array to be: [data]",{"range":"572","text":"573"},"Update the dependencies array to be: [courseId, sectionNumber]",{"range":"574","text":"575"},"Update the dependencies array to be: [courseId]",{"range":"576","text":"577"},[3623,3625],"[sendRequest]",[5082,5084],[15367,15369],"[data]",[1915,1917],"[courseId, sectionNumber]",[928,930],"[courseId]"]